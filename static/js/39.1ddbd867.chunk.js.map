{"version":3,"sources":["components/pagecomponents/TitleText.tsx","components/pagecomponents/TitleBar.tsx","i18n/LocalizedDate.tsx","utils/refreshToken.ts","pages/Resources/Volume/VolumeTable.tsx","utils/idString.ts","pages/Resources/Volume/index.tsx"],"names":["Title","styled","h1","TitleText","children","TitleBar","div","spaceBetween","LocalizedDate","dateTimeString","dayjs","format","useRefreshToken","useState","refreshToken","setRefreshToken","useCallback","original","root","lang","resources","volume","service","getApiService","VolumeService","getVolumes","then","x","volumes","VolumeTable","props","useAsync","promiseFn","watch","data","isPending","dataSource","loading","rowKey","Column","title","id","dataIndex","size","render","attachedToInstance","_","attachedToInstanceName","attachedToInstanceId","substr","attachedToDevice","createTime","Volume","token","refresh","ClickableA","onClick"],"mappings":"uIAAA,sDAGMA,EAHN,OAGcC,EAAOC,GAAV,uEAAGD,CAAH,qCAKEE,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpC,OACE,kBAACJ,EAAD,KAAQI,K,iCCTZ,sCAMaC,EANb,OAMwBJ,EAAOK,IAAV,2DAAGL,CAAH,sBAGjB,oBAAEM,aAAF,qBAA4B,0FAAgB,O,iCCVhD,wEASaC,EAAiC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAE/C,OACE,oCACGC,IAAMD,GAAgBE,OAAO,0B,sFCX7B,SAASC,IAAmB,IAAD,EACQC,oBAAS,GADjB,mBACzBC,EADyB,KACXC,EADW,KAKhC,MAAO,CAACD,EAFmBE,uBAAY,kBAAMD,GAAgB,SAACE,GAAD,OAAeA,OAAW,O,2MCOzF,IAAMC,EAAOC,IAAKC,UAAUC,OAEtBC,EAAUC,YAAcC,KAExBC,EAAa,kBAAMH,EAAQG,aAAaC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,YAO7CC,EAA+B,SAACC,GAAW,IAAD,EAEzBC,YAAS,CAAEC,UAAWP,EAAYQ,MAAOH,EAAMhB,eAAnEoB,EAF6C,EAE7CA,KAAMC,EAFuC,EAEvCA,UAEd,OACE,uBAAOC,WAAYF,EAAMG,QAASF,EAAWG,OAAO,MAClD,sBAAOC,OAAP,CAAcC,MAAO,kBAAC,IAAD,CAAWC,GAAIvB,EAAKuB,KAAQC,UAAU,OAC3D,sBAAOH,OAAP,CAAcC,MAAO,kBAAC,IAAD,CAAWC,GAAIvB,EAAKyB,OAAUD,UAAU,OAC3DE,OAAQ,SAACD,GAAD,gBAAqBA,EAArB,UACV,sBAAOJ,OAAP,CAAcC,MAAO,kBAAC,IAAD,CAAWC,GAAIvB,EAAK2B,qBAAwBH,UAAU,uBACzEE,OAAQ,SAACE,EAAGzB,GAAJ,gBAA0BA,EAAO0B,uBAAjC,aAAqE1B,EAAO2B,qBChChFC,OAAO,EAAG,GDgCN,QAEV,sBAAOV,OAAP,CAAcC,MAAO,kBAAC,IAAD,CAAWC,GAAIvB,EAAKgC,mBAAsBR,UAAU,qBACzE,sBAAOH,OAAP,CAAcC,MAAO,kBAAC,IAAD,CAAWC,GAAIvB,EAAKiC,aAAgBT,UAAU,aACjEE,OAAQ,SAACO,GAAD,OAAwB,kBAAC3C,EAAA,EAAD,CAAeC,eAAgB0C,SE7BjEjC,EAAOC,IAAKC,UAAUC,OAEf+B,EAAmB,SAACtB,GAAW,IAAD,EAEhBlB,cAFgB,mBAElCyC,EAFkC,KAE3BC,EAF2B,KAIzC,OACE,6BACE,kBAACjD,EAAA,EAAD,CAAUE,cAAc,GACtB,kBAACJ,EAAA,EAAD,KACE,kBAAC,IAAD,CAAWsC,GAAIvB,EAAKsB,SAEtB,8BACE,kBAACe,EAAA,EAAD,CAAYC,QAASF,GACnB,kBAAC,IAAD,CAAWb,GAAIvB,EAAKoC,aAI1B,kBAAC,EAAD,CAAaxC,aAAcuC,MAKlBD","file":"static/js/39.1ddbd867.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h1`\r\n  font-weight: 700;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const TitleText: React.FC = ({ children }) => {\r\n  return (\r\n    <Title>{children}</Title>\r\n  );\r\n}\r\n\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface Props {\r\n  spaceBetween?: boolean;\r\n}\r\n\r\nexport const TitleBar = styled.div<Props>`\r\n  margin: 8px 0;\r\n\r\n  ${({spaceBetween = false}) => !spaceBetween ? \"\" : `\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  `}\r\n`;\r\n\r\n","import React, { useMemo } from \"react\";\r\nimport { useStore } from 'simstate';\r\nimport { I18nStore } from '.';\r\nimport dayjs from \"dayjs\";\r\n\r\ninterface Props {\r\n  dateTimeString: string;\r\n}\r\n\r\nexport const LocalizedDate: React.FC<Props> = ({ dateTimeString }) => {\r\n\r\n  return (\r\n    <>\r\n      {dayjs(dateTimeString).format(\"YYYY-MM-DD HH:mm:ss\")}\r\n    </>\r\n  )\r\n}\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport function useRefreshToken() {\r\n  const [refreshToken, setRefreshToken] = useState(false);\r\n\r\n  const updateRefreshToken = useCallback(() => setRefreshToken((original) => !original), []);\r\n\r\n  return [refreshToken, updateRefreshToken] as const;\r\n}\r\n\r\nexport interface Refreshable {\r\n  refreshToken: boolean;\r\n}\r\n","import React from \"react\";\r\nimport { lang, Localized } from \"src/i18n\";\r\nimport { getApiService } from \"src/apis\";\r\nimport { InstanceService } from \"src/apis/resources/InstanceService\";\r\nimport { Table } from \"antd\";\r\nimport { useAsync } from \"react-async\";\r\nimport { FlavorModalLink } from \"src/components/flavor/FlavorModalLink\";\r\nimport { LocalizedDate } from \"src/i18n/LocalizedDate\";\r\nimport { VolumeService } from \"src/apis/resources/VolumeService\";\r\nimport { Volume } from \"src/models/Volume\";\r\nimport { idString } from \"src/utils/idString\";\r\n\r\nconst root = lang.resources.volume;\r\n\r\nconst service = getApiService(VolumeService);\r\n\r\nconst getVolumes = () => service.getVolumes().then(x => x.volumes);\r\n\r\n\r\ninterface Props {\r\n  refreshToken?: any;\r\n}\r\n\r\nexport const VolumeTable: React.FC<Props> = (props) => {\r\n\r\n  const { data, isPending } = useAsync({ promiseFn: getVolumes, watch: props.refreshToken });\r\n\r\n  return (\r\n    <Table dataSource={data} loading={isPending} rowKey=\"id\">\r\n      <Table.Column title={<Localized id={root.id} />} dataIndex=\"id\" />\r\n      <Table.Column title={<Localized id={root.size} />} dataIndex=\"size\"\r\n        render={(size: number) => `${size} GB`} />\r\n      <Table.Column title={<Localized id={root.attachedToInstance} />} dataIndex=\"attachedToInstanceId\"\r\n        render={(_, volume: Volume) => `${volume.attachedToInstanceName} (${idString(volume.attachedToInstanceId)})`}\r\n      />\r\n      <Table.Column title={<Localized id={root.attachedToDevice} />} dataIndex=\"attachedToDevice\" />\r\n      <Table.Column title={<Localized id={root.createTime} />} dataIndex=\"createTime\"\r\n        render={(createTime: string) => <LocalizedDate dateTimeString={createTime} />} />\r\n    </Table>\r\n  )\r\n};\r\n","export function idString(id: string) {\r\n  return id.substr(0, 6);\r\n}\r\n","import React from \"react\";\r\nimport { lang, Localized } from \"src/i18n\";\r\nimport { TitleBar } from \"src/components/pagecomponents/TitleBar\";\r\nimport { TitleText } from \"src/components/pagecomponents/TitleText\";\r\nimport { ClickableA } from \"src/components/ClickableA\";\r\nimport { useRefreshToken } from \"src/utils/refreshToken\";\r\nimport { VolumeTable } from \"src/pages/Resources/Volume/VolumeTable\";\r\n\r\nconst root = lang.resources.volume;\r\n\r\nexport const Volume: React.FC = (props) => {\r\n\r\n  const [token, refresh] = useRefreshToken();\r\n\r\n  return (\r\n    <div>\r\n      <TitleBar spaceBetween={true}>\r\n        <TitleText>\r\n          <Localized id={root.title} />\r\n        </TitleText>\r\n        <span>\r\n          <ClickableA onClick={refresh}>\r\n            <Localized id={root.refresh} />\r\n          </ClickableA>\r\n        </span>\r\n      </TitleBar>\r\n      <VolumeTable refreshToken={token} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Volume;\r\n"],"sourceRoot":""}