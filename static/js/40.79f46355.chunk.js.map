{"version":3,"sources":["pages/common/indexRoutes.tsx","utils/path.ts","pages/common/useSidenavs.ts","../node_modules/@ant-design/icons-svg/es/asn/DesktopOutlined.js","../node_modules/@ant-design/icons/es/icons/DesktopOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/HddOutlined.js","../node_modules/@ant-design/icons/es/icons/HddOutlined.js","pages/Resources/ResourcesNotAvailable.tsx","pages/Resources/index.tsx"],"names":["indexRoutes","routes","basePath","props","path1","path2","scope","useStore","UserStore","user","filteredSidenavs","useMemo","filter","x","checkScope","map","children","child","sidebarRoutes","navStore","NavStore","path","useEffect","setSidenavs","useSidenavs","location","pathname","endsWith","substr","length","noThrow","to","Component","arrayContainsElement","key","from","ErrorPage","EmptyRoot","DesktopOutlined","ref","React","createElement","AntdIcon","Object","assign","icon","DesktopOutlinedSvg","displayName","forwardRef","HddOutlined","HddOutlinedSvg","NotAvailableReason","root","lang","resources","notAvailable","ResourcesNotAvailable","reason","status","title","id","subTitle","extra","type","toExpenses","nav","sidenav","textId","dashboard","Icon","DashboardOutlined","match","lazy","instance","volume","ResourcesIndexRoutes","ResourcesIndexPage","userStore","updateAvailability","scopeActive","userActive","isResourcesDisabled","NotProjectScope","ScopeNotActive","UserNotActive"],"mappings":"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","file":"static/js/40.79f46355.chunk.js","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { NavItemProps } from \"src/layouts/nav/NavItemProps\";\r\nimport { Scope } from \"src/models/Scope\";\r\nimport { useStore } from \"simstate\";\r\nimport { UserStore } from \"src/stores/UserStore\";\r\nimport { Router, RouteComponentProps, Redirect } from \"@reach/router\";\r\nimport { useSidenavs } from \"src/pages/common/useSidenavs\";\r\nimport { pathEquals } from \"src/utils/path\";\r\nimport { arrayContainsElement } from \"src/utils/Arrays\";\r\nimport { ErrorPage } from \"src/components/ErrorPage\";\r\n\r\nexport interface IndexRoute extends NavItemProps {\r\n  checkScope: (scope: Scope) => boolean;\r\n  Component: React.ComponentType<RouteComponentProps>;\r\n  children?: IndexRoute[];\r\n}\r\n\r\nexport function indexRoutes(routes: IndexRoute[], basePath: string) {\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  return (props: RouteComponentProps) => {\r\n    const userStore = useStore(UserStore);\r\n\r\n    const { scope } = userStore.user!!;\r\n\r\n    const filteredSidenavs = useMemo(() => {\r\n      // filter the root indexes,\r\n      const rootIndexes = routes.filter((x) => x.checkScope(scope));\r\n\r\n      // then filter the children\r\n      return rootIndexes.map((x) => (\r\n        { ...x, children: x.children?.filter((child) => child.checkScope(scope)) }\r\n      ));\r\n\r\n    }, [scope]);\r\n\r\n    useSidenavs(filteredSidenavs, basePath);\r\n\r\n    if (pathEquals(props.location!!.pathname, basePath)) {\r\n      return <Redirect noThrow={true} to={filteredSidenavs[0].path} />;\r\n    }\r\n\r\n    return (\r\n      <Router>\r\n        {filteredSidenavs.map(({ Component, path, children }) => {\r\n          if (arrayContainsElement(children)) {\r\n            return (\r\n              <EmptyRoot key={path} path={path}>\r\n                <Redirect noThrow={true} from=\"/\" to={children[0].path} />\r\n                {children.map((x) => (\r\n                  <x.Component key={x.path} path={`${x.path}/*`} />\r\n                ))}\r\n                <ErrorPage path=\"*\" />\r\n              </EmptyRoot>\r\n            )\r\n          } else {\r\n            return (\r\n              <Component key={path} path={`${path}/*`} />\r\n            );\r\n          }\r\n        })}\r\n        <ErrorPage path=\"*\" />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst EmptyRoot: React.FC<RouteComponentProps> = ({ children }) => {\r\n  return <>{children}</>;\r\n}\r\n","export function pathEquals(path1: string, path2: string): boolean {\r\n  if (path1.endsWith(\"/\")) { path1 = path1.substr(0, path1.length - 1); }\r\n  if (path2.endsWith(\"/\")) { path2 = path2.substr(0, path2.length - 1); }\r\n\r\n  return path1 === path2;\r\n}\r\n\r\n","import { NavItemProps } from \"src/layouts/nav/NavItemProps\";\r\nimport { useStore } from \"simstate\";\r\nimport { NavStore } from \"src/layouts/nav/NavStore\";\r\nimport { useMemo, useEffect } from \"react\";\r\n\r\nexport function useSidenavs(sidebarRoutes: NavItemProps[], basePath: string) {\r\n  const navStore = useStore(NavStore);\r\n\r\n  const routes = useMemo(() => (\r\n    sidebarRoutes.map((x) => ({\r\n      ...x,\r\n      path: basePath + x.path,\r\n      children: x.children?.map((child) => (\r\n        {\r\n          ...child,\r\n          path: `${basePath}${x.path}/${child.path}`,\r\n        }\r\n      ))\r\n    }))\r\n  ), [sidebarRoutes, basePath]);\r\n\r\n  useEffect(() => {\r\n    navStore.setSidenavs(routes);\r\n    return () => { navStore.setSidenavs([]); }\r\n  }, [routes]);\r\n}\r\n","// This icon file is generated automatically.\n// tslint:disable\nvar DesktopOutlined = { \"name\": \"desktop\", \"theme\": \"outlined\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M928 140H96c-17.7 0-32 14.3-32 32v496c0 17.7 14.3 32 32 32h380v112H304c-8.8 0-16 7.2-16 16v48c0 4.4 3.6 8 8 8h432c4.4 0 8-3.6 8-8v-48c0-8.8-7.2-16-16-16H548V700h380c17.7 0 32-14.3 32-32V172c0-17.7-14.3-32-32-32zm-40 488H136V212h752v416z\" } }] } };\nexport default DesktopOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport React from 'react';\nimport DesktopOutlinedSvg from \"@ant-design/icons-svg/es/asn/DesktopOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar DesktopOutlined = function DesktopOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: DesktopOutlinedSvg\n  }));\n};\n\nDesktopOutlined.displayName = 'DesktopOutlined';\nexport default React.forwardRef(DesktopOutlined);","// This icon file is generated automatically.\n// tslint:disable\nvar HddOutlined = { \"name\": \"hdd\", \"theme\": \"outlined\", \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M832 64H192c-17.7 0-32 14.3-32 32v832c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V96c0-17.7-14.3-32-32-32zm-600 72h560v208H232V136zm560 480H232V408h560v208zm0 272H232V680h560v208zM496 208H312c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8zM312 544h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H312c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8zm328 244a40 40 0 1080 0 40 40 0 10-80 0z\" } }] } };\nexport default HddOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport React from 'react';\nimport HddOutlinedSvg from \"@ant-design/icons-svg/es/asn/HddOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar HddOutlined = function HddOutlined(props, ref) {\n  return React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: HddOutlinedSvg\n  }));\n};\n\nHddOutlined.displayName = 'HddOutlined';\nexport default React.forwardRef(HddOutlined);","import React from \"react\";\r\nimport { Result, Button } from 'antd';\r\nimport { lang, Localized } from 'src/i18n';\r\nimport { RouteComponentProps, Link } from \"@reach/router\";\r\n\r\nconst root = lang.resources.notAvailable;\r\n\r\nexport enum NotAvailableReason {\r\n  NotProjectScope = \"NotProjectScope\",\r\n  UserNotActive = \"UserNotActive\",\r\n  ScopeNotActive = \"ScopeNotActive\",\r\n}\r\n\r\ninterface Props extends RouteComponentProps {\r\n  reason: NotAvailableReason;\r\n}\r\n\r\nexport const ResourcesNotAvailable: React.FC<Props> = ({ reason }) => {\r\n\r\n  return (\r\n    <Result\r\n      status={403}\r\n      title={<Localized id={root[reason].title} />}\r\n      subTitle={<Localized id={root[reason].subTitle} />}\r\n      extra={<Button type=\"primary\"><Link to=\"/expenses\"><Localized id={root.toExpenses} /></Link></Button>}\r\n    />\r\n  )\r\n};\r\n","import React, {  useEffect } from \"react\";\r\nimport { lang } from \"src/i18n\";\r\nimport { DashboardOutlined, DesktopOutlined, HddOutlined } from \"@ant-design/icons\";\r\nimport { IndexRoute, indexRoutes } from \"src/pages/common/indexRoutes\";\r\nimport { RouteComponentProps } from \"@reach/router\";\r\nimport { useStore } from \"simstate\";\r\nimport { UserStore } from \"src/stores/UserStore\";\r\nimport { isResourcesDisabled } from \"src/models/Scope\";\r\nimport { NotAvailableReason, ResourcesNotAvailable } from \"./ResourcesNotAvailable\";\r\n\r\nconst root = lang.nav.sidenav.resources;\r\n\r\nconst routes = [\r\n  {\r\n    path: \"dashboard\",\r\n    textId: root.dashboard,\r\n    Icon: DashboardOutlined,\r\n    match: (path: string) => path === \"/resources/dashboard\",\r\n    checkScope: () => true,\r\n    Component: React.lazy(() => import(\"./Dashboard\")),\r\n  }, {\r\n    path: \"instances\",\r\n    textId: root.instance,\r\n    Icon: DesktopOutlined,\r\n    match: (path: string) => path === \"/resources/instances\",\r\n    checkScope: () => true,\r\n    Component: React.lazy(() => import(\"./Instance\")),\r\n  }, {\r\n    path: \"volumes\",\r\n    textId: root.volume,\r\n    Icon: HddOutlined,\r\n    match: (path: string) => path === \"/resources/volumes\",\r\n    checkScope: () => true,\r\n    Component: React.lazy(() => import(\"./Volume\")),\r\n  }\r\n] as IndexRoute[];\r\n\r\nconst ResourcesIndexRoutes = indexRoutes(routes, \"/resources/\")\r\n\r\nconst ResourcesIndexPage: React.FC<RouteComponentProps> = (props) => {\r\n  const userStore = useStore(UserStore);\r\n\r\n  useEffect(() => {\r\n    userStore.updateAvailability();\r\n  });\r\n\r\n  const { scope, scopeActive, userActive } = userStore.user!;\r\n\r\n  // judge whether resources available\r\n  const reason = isResourcesDisabled(scope) ? NotAvailableReason.NotProjectScope :\r\n    (!userActive) ? NotAvailableReason.UserNotActive :\r\n      (!scopeActive) ? NotAvailableReason.ScopeNotActive :\r\n        null;\r\n\r\n  if (reason) {\r\n    return (\r\n      <ResourcesNotAvailable reason={reason} path=\"resources/*\" />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ResourcesIndexRoutes {...props} />\r\n  )\r\n};\r\n\r\nexport default ResourcesIndexPage;\r\n\r\n"],"sourceRoot":""}