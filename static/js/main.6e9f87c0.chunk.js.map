{"version":3,"sources":["App.tsx","serviceWorker.ts","index.tsx","apis/identity/AccountService.ts","apis/account/AuthenticationService.ts","i18n/definitions/cn.ts","i18n/definition.tsx","i18n/definitions/en.ts","models/TransactionReason.ts","apis/account/AuthenticationServiceMock.ts","apis/identity/AccountServiceMock.ts","apis/identity/DomainsServiceMock.ts","apis/identity/UsersServiceMock.ts","apis/identity/ProjectsServiceMock.ts","apis/expenses/BalanceServiceMock.ts","apis/expenses/TransactionsServiceMock.ts","apis/expenses/BillingServiceMock.ts","apis/resources/ResourcesServiceMock.ts","apis/resources/InstanceServiceMock.ts","apis/expenses/QuotaServiceMock.ts","apis/resources/VolumeServiceMock.ts","apis/index.ts","apis/expenses/BillingService.ts","apis/HttpService.ts","apis/identity/UsersService.ts","apis/identity/DomainsService.ts","apis/identity/ProjectsService.ts","apis/expenses/TransactionsService.ts","apis/resources/InstanceService.ts","apis/expenses/QuotaService.ts","apis/resources/ResourcesService.ts","apis/expenses/BalanceService.ts","apis/resources/VolumeService.ts","i18n/lang.ts","i18n/I18nStore.tsx","i18n/useLocalize.tsx","i18n/Localized.tsx","i18n/RecursiveLocalized.tsx","stores/UserStore.ts","layouts/nav/NavPoints.ts","layouts/nav/NavStore.ts","stores/AvailableScopesStore.ts","models/Scope.ts","utils/delay.ts","components/PageLoading.tsx","utils/useLocation.ts"],"names":["AsyncHomePages","React","lazy","AsyncNormalPages","TopLevelRouteSelector","props","location","pathname","AntdConfigProvider","children","i18nStore","useStore","I18nStore","configs","useMemo","currentLanguage","metadata","antdConfigProvider","App","userStore","createStore","UserStore","availableScopesStore","AvailableScopesStore","navStore","NavStore","stores","fallback","PageLoading","primary","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","AccountService","this","fetch","method","HttpMethod","GET","data","response","email","name","PATCH","body","original","updated","resp","domainId","DELETE","POST","HttpService","AuthenticationService","username","password","params","scope","token","setToken","axios","defaults","headers","common","Authorization","id","langStrings","detailedId","dayjsLocale","locale","zh_CN","definitions","validateMessages","required","number","integer","components","billings","refresh","current","history","Allocated","Used","subjectType","Domain","Project","User","UserProjectAssignment","table","quota","resources","amount","payer","nextDue","startTime","endTime","actions","stats","title","flavor","type","value","cpu","memory","rootDisk","modalTitle","resourceType","values","loadingQuota","used","available","total","storage","setResources","link","transactions","account","time","reason","org","receiver","Charge","UserManagementFee","DomainManagementFee","ProjectManagementFee","DomainQuota","ProjectQuota","DomainQuotaChange","ProjectQuotaChange","SocialResourcesChange","UserProjectQuota","users","setAsPayUser","prompt","opName","mustAdmin","active","true","false","role","Admin","Member","payUser","yes","addUser","button","selectUser","selectRole","remove","errors","onlyAdmin","changeRole","operationResult","inProgress","success","fail","retry","homepage","description","pageIndicator","login","register","loginForm","remember","forget","loginFailTitle","noScope","other","registerForm","registerFailed","conflict","identity","basic","profile","update","failedDescription","changePassword","newPassword","joinedDomains","exit","confirmExit","okText","cancelText","error","isPayAccount","notJoined","cannotExitCurrentDomain","cannotExitSocialDomain","joinDomain","domains","admins","edit","setAdmins","payUserMustBeSelected","setPayUser","delete","confirmPrompt","inactive","add","projects","create","manageUsers","close","closeAndRefresh","notAvailable","NotProjectScope","subTitle","UserNotActive","ScopeNotActive","toExpenses","instance","ip","imageName","status","label","SHUTOFF","BUILD","ERROR","ACTIVE","REBOOT","HARD_REBOOT","STOPPED","taskState","powerState","vmState","createTime","start","stop","restart","hardRestart","flavorLimit","volume","volumeLimit","image","size","attachedToInstance","attachedToDevice","dashboard","instanceList","detail","nav","errorPage","backToHome","scopeIndicator","social","system","admin","failDescription","changing","reloading","reload","user","selfCenter","logout","sidenav","root","network","expenses","overview","accountTransactions","systemTransactions","domainTransactions","projectTransactions","allocated","domain","project","selfcenter","join","balance","toAccountTransaction","charge","projectAdmin","domainAdmin","header","footer","contact","github","website","linkedin","moreProducts","chainstore","chainpaper","aplusquant","tagx00","lightx00","copyright","madeWithLove","allLanguages","cn","en_US","baselineLanguage","getLanguage","langString","language","find","x","includes","TransactionType","AuthenticationServiceMock","delay","scopes","domainName","UserRole","projectName","projectId","lastLoginScope","defaultScope","userId","JSON","stringify","userActive","scopeActive","makeHttpError","AccountServiceMock","cjd","cjy","DomainsServiceMock","members","undefined","adminIds","payUserId","DomainsService","UsersServiceMock","UsersService","lq","fgh","ProjectsServiceMock","userQuotas","code","ProjectsService","BalanceServiceMock","BalanceService","TransactionsServiceMock","info","payerId","payerName","receiverId","receiverName","getSystemTransactions","TransactionsService","dummyResources","dummyDate","BillingServiceMock","subjectId","subjectName","billing","BillingService","ResourcesServiceMock","ResourcesService","InstanceServiceMock","instances","totalStartupHours","flavors","images","minDisk","flavorId","imageId","InstanceService","QuotaServiceMock","QuotaService","VolumeServiceMock","volumes","VolumeService","services","serviceConfig","Map","getApiService","serviceType","get","forEach","item","set","axiosInstance","baseURL","ms","fetchInfo","url","request","ids","limit","flavorName","instanceId","hard","lang","makeLangObj","obj","baselineLangSection","baseKey","key","newKey","splitter","useState","setLanguage","changeLanguage","useCallback","getDefinition","content","split","RangeError","translate","replacements","def","length","definition","array","ri","containsNonPrimitive","i","replacePlaceholders","useLocalized","useMultiLocalized","map","Localized","RecursiveLocalized","authenticationService","getUserInfoInStorage","localStorage","getItem","parse","setUser","loggedIn","removeItem","setItem","saveUserInfo","updateAvailability","a","changeScope","useEffect","availableNavPoints","textId","jumpTo","filter","getBillingSubject","useLocation","sidenavs","setSidenavs","hasSider","sidebarCollapsed","setSidebarCollapsed","currentNavPath","points","startsWith","filteredOut","depth","j","path1","path2","push","read","service","setScopes","setReloading","save","updateScopes","getScopes","console","log","scopeId","scopeName","isSystemScope","isSocialScope","isDomainScope","isAdmin","isDomainAdmin","isProjectScope","isProjectAdmin","isResourcesDisabled","Promise","resolve","setTimeout","spinning","initialState","globalHistory","state","setState","removeListener","listen"],"mappings":"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","file":"static/js/main.6e9f87c0.chunk.js","sourcesContent":["import React, { Suspense, useMemo } from 'react';\nimport { Router, RouteComponentProps } from \"@reach/router\";\nimport { StoreProvider, createStore, useStore } from 'simstate';\nimport { UserStore } from './stores/UserStore';\nimport { I18nStore } from \"./i18n\";\nimport PageLoading from \"./components/PageLoading\";\nimport { NavStore } from \"./layouts/nav/NavStore\";\nimport { ConfigProvider } from \"antd\";\nimport { AvailableScopesStore } from \"./stores/AvailableScopesStore\";\n\nconst AsyncHomePages = React.lazy(() => import(\"./pages/Home\"));\nconst AsyncNormalPages = React.lazy(() => import(\"./pages/NormalPages\"));\n\n// react router does not support regex matching, so\nconst TopLevelRouteSelector: React.FC<RouteComponentProps> = (props) => {\n  // Location is present you bad type definitions\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const location = props.location!!;\n\n  switch (location.pathname) {\n    case \"/\":\n    case \"/register\":\n      return <AsyncHomePages />;\n    default:\n      return <AsyncNormalPages />;\n  }\n}\n\nfunction AntdConfigProvider({ children }) {\n  const i18nStore = useStore(I18nStore);\n  const configs = useMemo(() => (\n    i18nStore.currentLanguage.metadata.antdConfigProvider\n  ), [i18nStore.currentLanguage]);\n\n  return (\n    <ConfigProvider {...configs} >\n      {children}\n    </ConfigProvider>\n  );\n}\n\nfunction App() {\n  const userStore = createStore(UserStore);\n  const availableScopesStore = createStore(AvailableScopesStore);\n  const i18nStore = createStore(I18nStore);\n  const navStore = createStore(NavStore);\n\n  return (\n    <StoreProvider stores={[userStore, i18nStore, navStore, availableScopesStore]}>\n      <AntdConfigProvider>\n        <Suspense fallback={<PageLoading />}>\n          <Router primary={false} >\n            <TopLevelRouteSelector path=\"*\" />\n          </Router>\n        </Suspense>\n      </AntdConfigProvider>\n\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { HttpService, HttpMethod } from '../HttpService';\r\nimport { Profile } from \"src/models/Profile\";\r\nimport { UserDomainAssignment } from \"src/models/UserDomainAssignment\";\r\nimport { Scope } from \"src/models/Scope\";\r\n\r\nexport interface ProfileResponse {\r\n  profile: Profile;\r\n}\r\n\r\nexport interface GetJoinedDomainsResponse {\r\n  domains: UserDomainAssignment[];\r\n}\r\n\r\nexport interface ExitDomainsError {\r\n  reason: \"isPayAccount\" | \"notJoined\";\r\n}\r\n\r\nexport interface GetJoinableDomainsResponse {\r\n  domains: { id: string; name: string }[];\r\n}\r\n\r\nexport interface GetScopesResponse {\r\n  scopes: Scope[];\r\n}\r\n\r\nexport class AccountService extends HttpService {\r\n\r\n\r\n  async getScopes(): Promise<GetScopesResponse> {\r\n    const data = await this.fetch<GetScopesResponse>({\r\n      method: HttpMethod.GET,\r\n      path: \"/identity/account/scopes\",\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  async getProfile(): Promise<ProfileResponse> {\r\n    const response = await this.fetch<ProfileResponse>({\r\n      method: HttpMethod.GET,\r\n      path: \"/identity/account/profile\",\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  async updateProfile(email: string, name: string): Promise<ProfileResponse> {\r\n    const response = await this.fetch<ProfileResponse>({\r\n      method: HttpMethod.PATCH,\r\n      path: \"/identity/account/profile\",\r\n      body: { email, name },\r\n    });\r\n\r\n    return response;\r\n  }\r\n\r\n  async updatePassword(original: string, updated: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.PATCH,\r\n      path: \"/identity/account/password\",\r\n      body: { original, updated }\r\n    });\r\n  }\r\n\r\n  async getJoinedDomains(): Promise<GetJoinedDomainsResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: \"/identity/account/joinedDomains\",\r\n    });\r\n\r\n    return resp as GetJoinedDomainsResponse;\r\n  }\r\n\r\n  // if not successful, throw a ExitDomainsError.\r\n  async exitDomain(domainId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.DELETE,\r\n      path: `/identity/account/joinedDomains/${domainId}`,\r\n    });\r\n  }\r\n\r\n  async getJoinableDomains(): Promise<GetJoinableDomainsResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `identity/account/joinableDomains`,\r\n    });\r\n\r\n    return resp as GetJoinableDomainsResponse;\r\n  }\r\n\r\n  async joinDomain(domainId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.POST,\r\n      path: `identity/account/joinableDomains/${domainId}`,\r\n    });\r\n  }\r\n}\r\n","import { HttpService, HttpMethod } from \"../HttpService\";\r\nimport { Scope } from 'src/models/Scope';\r\n\r\nexport interface LoginResponse {\r\n  userId: string;\r\n  token: string;\r\n  scopeActive: boolean;\r\n  userActive: boolean;\r\n}\r\n\r\nexport interface RegisterResponse {\r\n  userId: string;\r\n  token: string;\r\n  scope: Scope;\r\n}\r\n\r\nexport interface ScopesResponse {\r\n  scopes: Scope[];\r\n  defaultScope?: Scope;\r\n  lastLoginScope?: Scope;\r\n}\r\n\r\nexport class AuthenticationService extends HttpService {\r\n  async getScopes(username: string, password: string): Promise<ScopesResponse> {\r\n    const data = await this.fetch<ScopesResponse>({\r\n      method: HttpMethod.GET,\r\n      params: { username, password },\r\n      path: \"/auth/scopes\",\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  async login(username: string, password: string, scope: Scope): Promise<LoginResponse> {\r\n    const data = await this.fetch<LoginResponse>({\r\n      method: HttpMethod.POST,\r\n      body: { username, password, scope },\r\n      path: \"/auth/token\"\r\n    });\r\n\r\n    if (data.token) {\r\n      this.setToken(data.token);\r\n    }\r\n    return data;\r\n  }\r\n\r\n  async changeScope(scope: Scope): Promise<LoginResponse> {\r\n    const data = await this.fetch<LoginResponse>({\r\n      method: HttpMethod.POST,\r\n      body: { scope },\r\n      path: \"/auth/token/change\",\r\n    });\r\n\r\n    if (data.token) {\r\n      this.setToken(data.token);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  async register(username: string, password: string, email: string): Promise<RegisterResponse> {\r\n    const data = await this.fetch<RegisterResponse>({\r\n      method: HttpMethod.POST,\r\n      body: { username, password, email },\r\n      path: \"/identity/account\"\r\n    });\r\n\r\n    if (data.token) {\r\n      this.setToken(data.token);\r\n    }\r\n    return data;\r\n\r\n  }\r\n\r\n  setToken(token: string) {\r\n    if (token) {\r\n      this.axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n    } else {\r\n      delete this.axios.defaults.headers.common.Authorization;\r\n    }\r\n  }\r\n}\r\n","import zh_CN from \"antd/es/locale/zh_CN\";\r\n\r\nexport default {\r\n  metadata: {\r\n    id: \"cn\",\r\n    langStrings: [\"cn\", \"zh-CN\", \"zh\"],\r\n    detailedId: \"zh-CN\",\r\n    dayjsLocale: \"zh-cn\",\r\n    name: \"简体中文\",\r\n    antdConfigProvider: {\r\n      locale: zh_CN,\r\n    },\r\n  },\r\n  definitions: {\r\n    validateMessages: {\r\n      email: \"请输入有效的电子邮箱地址。\",\r\n      required: \"这是必需字段。\",\r\n      number: \"请输入数字。\",\r\n      integer: \"请输入整数。\",\r\n    },\r\n    components: {\r\n      billings: {\r\n        refresh: \"刷新\",\r\n        current: \"各个{}当前{}周期\",\r\n        history: \"{} {} 历史{}周期\",\r\n        Allocated: \"计费\",\r\n        Used: \"使用\",\r\n        subjectType: {\r\n          Domain: \"域\",\r\n          Project: \"项目\",\r\n          User: \"用户\",\r\n          UserProjectAssignment: \"项目用户\",\r\n        },\r\n        table: {\r\n          quota: \"资源限额\",\r\n          resources: \"资源使用量\",\r\n          amount: \"应付\",\r\n          payer: \"支付人\",\r\n          nextDue: \"下一次结算时间\",\r\n          startTime: \"开始时间\",\r\n          endTime: \"结束时间\",\r\n          actions: \"操作\",\r\n          history: \"历史\",\r\n        },\r\n        stats: {\r\n          title: \"{} {} 当前{}周期\",\r\n          history: \"历史周期\",\r\n          quota: \"资源限额\",\r\n          resources: \"资源使用\",\r\n          amount: \"应支付额\",\r\n          nextDue: \"下一次结算时间\",\r\n          payer: \"支付人\",\r\n        }\r\n      },\r\n      flavor: {\r\n        title: \"配置\",\r\n        type: \"类型\",\r\n        value: \"值\",\r\n        id: \"ID\",\r\n        name: \"配置名\",\r\n        cpu: \"CPU核心数\",\r\n        memory: \"内存 (MB)\",\r\n        rootDisk: \"根目录磁盘大小 (GB)\"\r\n      },\r\n      resources: {\r\n        modalTitle: \"资源\",\r\n        resourceType: \"资源类型\",\r\n        values: \"资源量\",\r\n        loadingQuota: \"加载可用资源量中……\",\r\n        used: \"已经使用\",\r\n        available: \"可以分配\",\r\n        total: \"共\",\r\n        number: \"请输入一个大于等于已用值，小于等于可用值的数字。\",\r\n        cpu: \"CPU核心数\",\r\n        memory: \"内存 (MB)\",\r\n        storage: \"存储 (GB)\",\r\n        setResources: {\r\n          link: \"设置资源限额\",\r\n          title: \"设置资源限额\",\r\n        },\r\n      },\r\n      transactions: {\r\n        account: {\r\n          time: \"时间\",\r\n          amount: \"交易额\",\r\n          reason: \"交易原因\",\r\n        },\r\n        org: {\r\n          time: \"时间\",\r\n          payer: \"支付人\",\r\n          receiver: \"接受者\",\r\n          amount: \"交易额\",\r\n          reason: \"交易原因\",\r\n        },\r\n        type: {\r\n          Charge: \"充值\",\r\n          UserManagementFee: \"用户管理费\",\r\n          DomainManagementFee: \"域管理费\",\r\n          ProjectManagementFee: \"项目管理费\",\r\n          DomainQuota: \"域资源费用周期结算\",\r\n          ProjectQuota: \"项目资源费用周期结算\",\r\n          DomainQuotaChange: \"域更改资源\",\r\n          ProjectQuotaChange: \"项目更改资源\",\r\n          SocialResourcesChange: \"社会项目资源使用变化\",\r\n          UserProjectQuota: \"用户资源费用周期结算\",\r\n        },\r\n      },\r\n      users: {\r\n        id: \"ID\",\r\n        username: \"用户名\",\r\n        name: \"姓名\",\r\n        email: \"电子邮箱\",\r\n        setAsPayUser: {\r\n          link: \"设置为付款用户\",\r\n          prompt: \"确定把这个用户设定为付款用户吗？\",\r\n          opName: \"设置付款用户\",\r\n          mustAdmin: \"付款用户必须是管理员。\",\r\n        },\r\n        active: {\r\n          title: \"状态\",\r\n          true: \"可用\",\r\n          false: \"停用\",\r\n        },\r\n        quota: \"资源配额\",\r\n        role: {\r\n          title: \"角色\",\r\n          Admin: \"管理员\",\r\n          Member: \"成员\",\r\n        },\r\n        payUser: {\r\n          title: \"付款用户\",\r\n          yes: \"是\",\r\n        },\r\n        addUser: {\r\n          button: \"增加成员\",\r\n          selectUser: \"选择用户（已加入的成员不显示）\",\r\n          selectRole: \"选择角色\",\r\n        },\r\n        actions: \"操作\",\r\n        remove: {\r\n          link: \"移除\",\r\n          opName: \"移除\",\r\n          prompt: \"确定要移除吗？\",\r\n          errors: {\r\n            payUser: \"不能移除付费用户。请先将付费用户修改为他人后再尝试。\",\r\n            onlyAdmin: \"不能移除唯一的管理员。请先设置其他管理员再尝试。\",\r\n          },\r\n        },\r\n        changeRole: {\r\n          opName: \"修改权限\",\r\n          errors: {\r\n            payUser: \"不能修改付费用户的角色。请先将付费用户修改为他人后再尝试。\",\r\n            onlyAdmin: \"不能修改唯一的管理员的角色。请先设置其他管理员再尝试。\",\r\n          },\r\n        },\r\n      },\r\n      operationResult: {\r\n        inProgress: \"{}中……\",\r\n        success: \"{}成功！\",\r\n        fail: \"{}失败\",\r\n        retry: \"请重试。\",\r\n      },\r\n    },\r\n    homepage: {\r\n      title: \"AcademyCloud\",\r\n      description: \"为大学设计的云平台\",\r\n      pageIndicator: {\r\n        login: \"登录\",\r\n        register: \"注册\",\r\n      },\r\n      loginForm: {\r\n        title: \"登录\",\r\n        username: \"用户名\",\r\n        password: \"密码\",\r\n        login: \"登录\",\r\n        remember: \"记住我\",\r\n        forget: \"忘记密码\",\r\n        loginFailTitle: \"登录失败\",\r\n        noScope: \"您未加入任何学校或者项目！请联系管理员。\",\r\n        other: \"登录失败\",\r\n      },\r\n      registerForm: {\r\n        title: \"注册\",\r\n        username: \"用户名\",\r\n        password: \"密码\",\r\n        email: \"电子邮箱\",\r\n        register: \"注册\",\r\n        registerFailed: \"注册失败\",\r\n        conflict: \"用户名已经被占用！\",\r\n        other: \"注册失败，请重试！\",\r\n      },\r\n    },\r\n    identity: {\r\n      account: {\r\n        basic: {\r\n          profile: {\r\n            title: \"基本信息\",\r\n            id: \"用户ID\",\r\n            username: \"用户名\",\r\n            name: \"姓名\",\r\n            email: \"电子邮箱\",\r\n            update: \"更新\",\r\n            opName: \"基本信息修改\",\r\n            failedDescription: \"请重试。\",\r\n          },\r\n          changePassword: {\r\n            title: \"修改密码\",\r\n            original: \"原密码\",\r\n            newPassword: \"新密码\",\r\n            update: \"更新\",\r\n            opName: \"密码修改\",\r\n            failedDescription: \"请检查密码是否输入正确，再重试。\",\r\n          },\r\n        },\r\n        joinedDomains: {\r\n          title: \"加入的域\",\r\n          table: {\r\n            id: \"域ID\",\r\n            name: \"域名字\",\r\n            role: \"角色\",\r\n            actions: \"操作\",\r\n            exit: \"退出域\",\r\n            confirmExit: \"确定要退出域 {} 吗？\",\r\n            okText: \"确定\",\r\n            cancelText: \"取消\",\r\n            opName: \"退出域\",\r\n            error: {\r\n              isPayAccount: \"您是这个域的付款账号。请先将付款账号修改为其他账号，再删除。\",\r\n              notJoined: \"您未加入这个域！\",\r\n              cannotExitCurrentDomain: \"不能退出现在正处于的域中！请切换到其他域再退出这个域。\",\r\n              cannotExitSocialDomain: \"不能退出社会域！社会域是所有用户都在的公共域。\",\r\n            }\r\n          },\r\n        },\r\n        joinDomain: {\r\n          link: \"申请加入新的域\",\r\n          title: \"加入一个域\",\r\n          name: \"域名\",\r\n          prompt: \"请选择要加入的域\",\r\n          opName: \"加入域\",\r\n        }\r\n      },\r\n      domains: {\r\n        title: \"域管理\",\r\n        id: \"域ID\",\r\n        name: \"域名字\",\r\n        active: {\r\n          title: \"状态\",\r\n          true: \"可用\",\r\n          false: \"停用\",\r\n        },\r\n        payUser: \"付款用户\",\r\n        admins: \"管理员\",\r\n        quota: \"资源配额\",\r\n        actions: \"操作\",\r\n        edit: \"编辑\",\r\n        setAdmins: {\r\n          link: \"设置管理员\",\r\n          title: \"设置管理员\",\r\n          payUserMustBeSelected: \"付款用户必须是管理员。\",\r\n        },\r\n        setPayUser: {\r\n          link: \"设置付款用户\",\r\n          title: \"设置付款用户\",\r\n        },\r\n        delete: {\r\n          link: \"删除\",\r\n          opName: \"删除域\",\r\n          confirmPrompt: \"确定要删除域 {} 吗？\",\r\n          inactive: \"域正处于不可用状态，请先充值将项目启用，再进行删除。\",\r\n        },\r\n        add: {\r\n          button: \"创建域\",\r\n          title: \"创建域\",\r\n          name: \"域名字\",\r\n          payUser: \"付款账号，也是域的一个管理员\",\r\n          opName: \"创建域\",\r\n          conflict: \"已有同名域存在。请更换一个域。\",\r\n        },\r\n      },\r\n      projects: {\r\n        title: \"项目管理\",\r\n        create: {\r\n          button: \"创建项目\",\r\n          opName: \"创建项目\",\r\n          name: \"项目名\",\r\n          payUser: \"付款账号，也是域的一个管理员\",\r\n          conflict: \"已有同名项目存在。请更换一个名字。\",\r\n        },\r\n        table: {\r\n          id: \"项目ID\",\r\n          name: \"项目名\",\r\n          active: {\r\n            title: \"状态\",\r\n            true: \"可用\",\r\n            false: \"停用\",\r\n          },\r\n          payUser: \"付款用户\",\r\n          users: \"用户\",\r\n          actions: \"操作\",\r\n          quota: \"资源配额\",\r\n          edit: \"编辑\",\r\n          manageUsers: {\r\n            link: \"管理用户\",\r\n            close: \"关闭\",\r\n            closeAndRefresh: \"关闭并刷新\",\r\n          },\r\n          delete: {\r\n            link: \"删除\",\r\n            opName: \"删除项目\",\r\n            confirmPrompt: \"确定要删除项目 {} 吗？\",\r\n            inactive: \"项目正处于不可用状态，请先充值将项目启用，再进行删除。\",\r\n          },\r\n        },\r\n      },\r\n      users: {\r\n        title: \"用户管理\",\r\n        refresh: \"刷新\",\r\n        id: \"ID\",\r\n        username: \"用户名\",\r\n        name: \"姓名\",\r\n        email: \"电子邮箱\",\r\n        active: {\r\n          title: \"状态\",\r\n          true: \"可用\",\r\n          false: \"停用\",\r\n        },\r\n        actions: \"操作\",\r\n        remove: {\r\n          link: \"移除用户\",\r\n          confirmPrompt: \"确定要移除用户 {} 吗？\",\r\n          opName: \"移除用户\",\r\n        }\r\n      },\r\n    },\r\n    resources: {\r\n      notAvailable: {\r\n        title: \"资源管理不可用\",\r\n        NotProjectScope: {\r\n          title: \"域范围不可以使用云资源\",\r\n          subTitle: \"请切换到项目范围以使用项目的云资源。\",\r\n        },\r\n        UserNotActive: {\r\n          title: \"您的用户目前余额小于0\",\r\n          subTitle: \"先给您的用户充值再继续使用云资源。\"\r\n        },\r\n        ScopeNotActive: {\r\n          title: \"您的范围目前由于欠费不可用\",\r\n          subTitle: \"请报告给您目前范围的管理员。\"\r\n        },\r\n        toExpenses: \"去资费管理\",\r\n\r\n      },\r\n      instance: {\r\n        id: \"ID\",\r\n        name: \"名字\",\r\n        ip: \"IP地址\",\r\n        flavor: \"配置\",\r\n        imageName: \"镜像名字\",\r\n        status: {\r\n          label: \"状态\",\r\n          SHUTOFF: \"关机\",\r\n          BUILD: \"构建中\",\r\n          ERROR: \"出错\",\r\n          ACTIVE: \"开机\",\r\n          REBOOT: \"软重启\",\r\n          HARD_REBOOT: \"硬重启\",\r\n          STOPPED: \"停止\",\r\n        },\r\n        taskState: {\r\n          label: \"任务状态\",\r\n\r\n        },\r\n        powerState: {\r\n          label: \"电源状态\",\r\n        },\r\n        vmState: {\r\n          label: \"虚拟机状态\",\r\n        },\r\n        createTime: \"创建时间\",\r\n        startTime: \"总开机时间\",\r\n        title: \"实例管理\",\r\n        refresh: \"刷新\",\r\n        actions: {\r\n          title: \"操作\",\r\n          start: \"开启实例\",\r\n          stop: \"关闭虚拟机\",\r\n          restart: \"软重启虚拟机\",\r\n          hardRestart: \"硬重启虚拟机\",\r\n          delete: \"删除虚拟机\",\r\n        },\r\n        add: {\r\n          button: \"创建新实例\",\r\n          name: \"名字\",\r\n          flavor: \"配置\",\r\n          available: \"可用\",\r\n          flavorLimit: \"您所选择的配置必须小于或者等于可用配置。\",\r\n          volume: \"磁盘大小 (GB)\",\r\n          volumeLimit: \"要创建的磁盘大小必须小于或者等于可用磁盘空间。\",\r\n          image: \"启动镜像\",\r\n          opName: \"创建实例\",\r\n        }\r\n      },\r\n      volume: {\r\n        title: \"查看云硬盘\",\r\n        refresh: \"刷新\",\r\n        id: \"ID\",\r\n        size: \"大小\",\r\n        createTime: \"创建时间\",\r\n        attachedToInstance: \"挂载到实例\",\r\n        attachedToDevice: \"实例上的设备路径\"\r\n      },\r\n      dashboard: {\r\n        title: \"仪表盘\",\r\n        instanceList: {\r\n          title: \"实例列表\",\r\n          detail: \"查看详细\",\r\n        }\r\n      },\r\n    },\r\n    nav: {\r\n      errorPage: {\r\n        title: \"无权限或不存在\",\r\n        description: \"对不起，您所访问的页面不存在或者您没有权限访问\",\r\n        backToHome: \"回到资源管理\",\r\n      },\r\n      scopeIndicator: {\r\n        projects: \"项目\",\r\n        domains: \"学校\",\r\n        social: \"社会\",\r\n        system: \"系统\",\r\n        admin: \"管理员\",\r\n        opName: \"切换\",\r\n        failDescription: \"请退出登录重试\",\r\n        changing: \"正在切换到{}...\",\r\n        reloading: \"重新加载中...\",\r\n        reload: \"重新加载\",\r\n      },\r\n      user: {\r\n        selfCenter: \"账号管理\",\r\n        logout: \"登出\",\r\n      },\r\n      sidenav: {\r\n        resources: {\r\n          root: \"资源管理\",\r\n          dashboard: \"仪表盘\",\r\n          instance: \"实例\",\r\n          network: \"网络\",\r\n          volume: \"云硬盘\",\r\n        },\r\n        expenses: {\r\n          root: \"费用管理\",\r\n          overview: \"总览\",\r\n          accountTransactions: \"账户交易记录\",\r\n          systemTransactions: \"系统交易记录\",\r\n          domainTransactions: \"域交易记录\",\r\n          projectTransactions: \"项目交易记录\",\r\n          billings: {\r\n            detail: \"详情\",\r\n            allocated: \"分配\",\r\n            used: \"使用\",\r\n            domains: \"系统中域计费\",\r\n            domain: \"当前域计费\",\r\n            projects: \"域中项目计费\",\r\n            project: \"当前项目计费\",\r\n            users: \"项目用户计费\",\r\n            user: \"当前项目用户计费\",\r\n          },\r\n        },\r\n        identity: {\r\n          root: \"用户管理\",\r\n          selfcenter: \"个人中心\",\r\n          account: {\r\n            root: \"个人账号管理\",\r\n            basic: \"基本信息\",\r\n            domains: \"加入的域\",\r\n            join: \"加入新域\",\r\n          },\r\n          domains: \"域管理\",\r\n          projects: \"项目管理\",\r\n          users: \"用户管理\",\r\n        },\r\n      },\r\n    },\r\n    expenses: {\r\n      root: \"费用管理\",\r\n      overview: {\r\n        root: \"总览\",\r\n        balance: \"余额\",\r\n        toAccountTransaction: \"查看账户交易记录\",\r\n        charge: {\r\n          button: \"充值\",\r\n          opName: \"充值\",\r\n          amount: \"数量\",\r\n        },\r\n        system: {\r\n          title: \"最近5个系统交易记录\",\r\n          link: \"查看更多系统交易记录\",\r\n        },\r\n        projectAdmin: {\r\n          link: \"查看当前项目计费周期信息\",\r\n        },\r\n        domainAdmin: {\r\n          link: \"查看当前域计费周期信息\"\r\n        }\r\n      },\r\n      accountTransactions: {\r\n        title: \"账户交易记录\",\r\n        refresh: \"刷新\",\r\n      },\r\n      systemTransactions: {\r\n        title: \"系统交易记录\",\r\n        refresh: \"刷新\",\r\n      },\r\n      domainTransactions: {\r\n        title: \"域交易记录\",\r\n        refresh: \"刷新\",\r\n      },\r\n      projectTransactions: {\r\n        title: \"项目交易记录\",\r\n        refresh: \"刷新\",\r\n      },\r\n    },\r\n    header: {\r\n      resources: \"资源管理\",\r\n      expenses: \"费用管理\",\r\n      identity: \"用户管理\"\r\n    },\r\n    footer: {\r\n      description: \"为高校设计的云平台\",\r\n      contact: {\r\n        title: \"联系方式\",\r\n        github: \"GitHub - ddadaal\",\r\n        website: \"个人网站 - ddadaal.me\",\r\n        linkedin: \"LinkedIn - Chen Junda\",\r\n      },\r\n      moreProducts: {\r\n        title: \"更多产品\",\r\n        chainstore: \"ChainStore - 基于区块链的分布式存储解决方案\",\r\n        chainpaper: \"ChainPaper - 基于区块链的论文社交平台\",\r\n        aplusquant: \"A+Quant - 基于机器学习的大类资产管理系统\",\r\n        tagx00: \"Tag x00 - 基于机器学习的众包标注平台\",\r\n        lightx00: \"Light x00 - 灯具进销存管理系统\",\r\n      },\r\n      copyright: {\r\n        madeWithLove: \"用 ❤ 制作\",\r\n      }\r\n    },\r\n  }\r\n}\r\n","import cn from \"./definitions/cn\";\r\nimport en from \"./definitions/en\";\r\n\r\nexport const allLanguages = [cn, en];\r\n\r\nexport const baselineLanguage = cn;\r\n\r\nexport type Language = typeof baselineLanguage;\r\n\r\nexport function getLanguage(langString: string): Language {\r\n  const language = allLanguages.find((x) => x.metadata.langStrings.includes(langString));\r\n  if (!language) { throw `Invalid lang string ${langString}`; }\r\n  return language;\r\n}\r\n\r\nexport function getDefinitions(langString: string): Language[\"definitions\"] {\r\n  return getLanguage(langString).definitions;\r\n}\r\n\r\nexport type Definitions = ReturnType<typeof getDefinitions>;\r\n","import en_US from \"antd/es/locale/en_US\";\r\n\r\nexport default {\r\n  metadata: {\r\n    id: \"en\",\r\n    langStrings: [\"en\", \"en-US\"],\r\n    detailedId: \"en-US\",\r\n    dayjsLocale: \"en\",\r\n    name: \"English\",\r\n    antdConfigProvider: {\r\n      locale: en_US,\r\n    },\r\n  },\r\n  definitions: {\r\n    validateMessages: {\r\n      required: \"Please input this field.\",\r\n      email: \"Please input a valid email.\",\r\n      number: \"Please input a valid number.\",\r\n      integer: \"Please input a valid integer.\",\r\n    },\r\n    components: {\r\n      billings: {\r\n        refresh: \"Refresh\",\r\n        current: \"Each {} Current {} Cycle\",\r\n        history: \"{} {} History {} Cycles\",\r\n        Allocated: \"Billing\",\r\n        Used: \"Usage\",\r\n        subjectType: {\r\n          Domain: \"Domain\",\r\n          Project: \"Project\",\r\n          User: \"User\",\r\n          UserProjectAssignment: \"User in Project\",\r\n        },\r\n        table: {\r\n          quota: \"Quota\",\r\n          resources: \"Resources\",\r\n          amount: \"Payable\",\r\n          payer: \"PayUser\",\r\n          nextDue: \"Next Due\",\r\n          startTime: \"StartTime\",\r\n          endTime: \"EndTime\",\r\n          actions: \"Actions\",\r\n          history: \"History\",\r\n        },\r\n        stats: {\r\n          title: \"{} {} Current {} Cycle\",\r\n          history: \"History Cycles\",\r\n          quota: \"Quota\",\r\n          resources: \"Resources\",\r\n          amount: \"Payable\",\r\n          nextDue: \"Next Due\",\r\n          payer: \"PayUser\",\r\n        }\r\n      },\r\n      flavor: {\r\n        title: \"Flavor\",\r\n        type: \"Type\",\r\n        value: \"Value\",\r\n        id: \"ID\",\r\n        name: \"Name\",\r\n        cpu: \"CPU Core\",\r\n        memory: \"Memory (MB)\",\r\n        rootDisk: \"root disk (GB)\"\r\n      },\r\n      resources: {\r\n        modalTitle: \"Resources\",\r\n        resourceType: \"Resource Type\",\r\n        values: \"Resource Quantity\",\r\n        loadingQuota: \"Loading available quota...\",\r\n        used: \"Used\",\r\n        available: \"Available\",\r\n        total: \"Total\",\r\n        number: \"Please input a number >= used and <= available.\",\r\n        cpu: \"CPU Cores\",\r\n        memory: \"Memory (MB)\",\r\n        storage: \"Storage (GB)\",\r\n        setResources: {\r\n          link: \"Set Quota\",\r\n          title: \"Set Quota\",\r\n        },\r\n      },\r\n      transactions: {\r\n        account: {\r\n          time: \"Time\",\r\n          amount: \"Amount\",\r\n          reason: \"Reason\",\r\n        },\r\n        org: {\r\n          time: \"Time\",\r\n          payer: \"Payer\",\r\n          amount: \"Amount\",\r\n          receiver: \"Receiver\",\r\n          reason: \"Reason\",\r\n        },\r\n        type: {\r\n          Charge: \"Charge\",\r\n          UserManagementFee: \"User Management Fee\",\r\n          DomainManagementFee: \"Domain Management Fee\",\r\n          ProjectManagementFee: \"Project Management Fee\",\r\n          DomainQuota: \"Domain Quota Fee\",\r\n          ProjectQuota: \"Project Quota Fee\",\r\n          DomainQuotaChange: \"Domain Resources Change\",\r\n          ProjectQuotaChange: \"Project Resources Change\",\r\n          SocialResourcesChange: \"Social Project Resources Change\",\r\n          UserProjectQuota: \"User Project Resources Fee\",\r\n        },\r\n      },\r\n      users: {\r\n        id: \"ID\",\r\n        username: \"Username\",\r\n        name: \"Name\",\r\n        email: \"Email\",\r\n        setAsPayUser: {\r\n          link: \"Set As Pay User\",\r\n          prompt: \"Confirm to set this user as the pay user?\",\r\n          opName: \"Set pay user\",\r\n          mustAdmin: \"Pay user must be an admin.\",\r\n        },\r\n        active: {\r\n          title: \"Status\",\r\n          true: \"Active\",\r\n          false: \"Inactive\",\r\n        },\r\n        quota: \"Quota\",\r\n        role: {\r\n          title: \"Role\",\r\n          Admin: \"Admin\",\r\n          Member: \"Member\",\r\n        },\r\n        payUser: {\r\n          title: \"Pay User\",\r\n          yes: \"Yes\",\r\n        },\r\n        addUser: {\r\n          button: \"Add user\",\r\n          selectUser: \"Select user (users already in are not shown)\",\r\n          selectRole: \"Select role\",\r\n        },\r\n        actions: \"Actions\",\r\n        remove: {\r\n          link: \"Remove\",\r\n          opName: \"Remove\",\r\n          prompt: \"Sure to remove?\",\r\n          errors: {\r\n            payUser: \"Can't remove the pay user. Please change the pay user and try again.\",\r\n            onlyAdmin: \"Can't remove the only admin. Please set more admins and try again.\",\r\n          },\r\n        },\r\n        changeRole: {\r\n          opName: \"Change role\",\r\n          errors: {\r\n            payUser: \"Can't change the role of pay user. Please change the pay user and try again.\",\r\n            onlyAdmin: \"Can't change the role of the only admin. Please set more admins and try again.\",\r\n          },\r\n        },\r\n      },\r\n      operationResult: {\r\n        inProgress: \"{} in progress...\",\r\n        success: \"{} success!\",\r\n        fail: \"{} failed.\",\r\n        retry: \"Please retry\",\r\n      },\r\n    },\r\n    homepage: {\r\n      title: \"AcademyCloud\",\r\n      description: \"Cloud for Academy\",\r\n      pageIndicator: {\r\n        login: \"Login\",\r\n        register: \"Register\",\r\n      },\r\n      loginForm: {\r\n        title: \"Login\",\r\n        username: \"Username\",\r\n        password: \"Password\",\r\n        login: \"Login\",\r\n        remember: \"Remember me\",\r\n        forget: \"Forget password\",\r\n        loginFailTitle: \"Login failed.\",\r\n        noScope: \"You are not part of any schools or projects. Please contact administrator.\",\r\n        other: \"Login Failed\",\r\n      },\r\n      registerForm: {\r\n        title: \"Register\",\r\n        username: \"Username\",\r\n        password: \"Password\",\r\n        email: \"Email\",\r\n        register: \"Register\",\r\n        registerFailed: \"Register failed\",\r\n        conflict: \"Username has been token.\",\r\n        other: \"Register failed. Please retry.\",\r\n      },\r\n    },\r\n    identity: {\r\n      account: {\r\n        basic: {\r\n          profile: {\r\n            title: \"Basic Information\",\r\n            id: \"User ID\",\r\n            username: \"Username\",\r\n            name: \"Name\",\r\n\r\n            email: \"Email\",\r\n            update: \"Update\",\r\n            opName: \"Basic information update\",\r\n            failedDescription: \"Please retry.\",\r\n          },\r\n          changePassword: {\r\n            title: \"Change Password\",\r\n            original: \"Original password\",\r\n            newPassword: \"New password\",\r\n            update: \"Update\",\r\n            opName: \"Password update\",\r\n            failedDescription: \"Please check the original password and retry.\",\r\n          },\r\n        },\r\n        joinedDomains: {\r\n          title: \"Joined Domains\",\r\n          table: {\r\n            id: \"Id\",\r\n            name: \"Name\",\r\n            role: \"Role\",\r\n            actions: \"Actions\",\r\n            exit: \"Exit Domain\",\r\n            confirmExit: \"Confirm to exit domain {} ?\",\r\n            okText: \"Confirm\",\r\n            cancelText: \"Cancel\",\r\n            opName: \"Exit domain\",\r\n            error: {\r\n              isPayAccount: \"You are the pay account for this domain. Please set the pay account of the domain to another account, and then exit.\",\r\n              notJoined: \"You have not joined this domain!\",\r\n              cannotExitCurrentDomain: \"Cannot exit current domain! Please switch to another domain before exiting current domain.\",\r\n              cannotExitSocialDomain: \"Cannot exit social domain! All users must be in the social domain.\",\r\n            }\r\n          },\r\n        },\r\n        joinDomain: {\r\n          link: \"Join A New Domain\",\r\n          title: \"Join A Domain\",\r\n          name: \"Domain Name\",\r\n          prompt: \"Select the domain you'd like to join\",\r\n          opName: \"Join a domain\",\r\n        }\r\n      },\r\n      domains: {\r\n        title: \"Domains Management\",\r\n        id: \"ID\",\r\n        name: \"Name\",\r\n        active: {\r\n          title: \"Status\",\r\n          true: \"Active\",\r\n          false: \"Inactive\",\r\n        },\r\n        payUser: \"Pay User\",\r\n        admins: \"Admins\",\r\n        quota: \"Quota\",\r\n        actions: \"Actions\",\r\n        edit: \"Edit\",\r\n        setAdmins: {\r\n          link: \"Set Admins\",\r\n          title: \"Set Admins\",\r\n          payUserMustBeSelected: \"Pay User must be an admin.\",\r\n        },\r\n        setPayUser: {\r\n          link: \"Set Pay User\",\r\n          title: \"Set Pay User\",\r\n        },\r\n        delete: {\r\n          link: \"Delete\",\r\n          opName: \"Delete domain\",\r\n          confirmPrompt: \"Confirm to delete domain {}?\",\r\n          inactive: \"Domain is inactive. Please active the domain by paying the debt, and then try again.\",\r\n        },\r\n        add: {\r\n          button: \"Create a New Domain\",\r\n          title: \"Create a New Domain\",\r\n          name: \"Name\",\r\n          payUser: \"Pay User, also a domain admin\",\r\n          opName: \"Create Domain\",\r\n          conflict: \"The domain with the same name already exists. Please choose another name.\",\r\n        }\r\n      },\r\n      projects: {\r\n        title: \"Projects\",\r\n        create: {\r\n          button: \"Create New Project\",\r\n          opName: \"Create project\",\r\n          name: \"Name\",\r\n          payUser: \"Pay User, also a domain admin\",\r\n          conflict: \"A project with the same name already exists in the domain. Please choose another name\",\r\n        },\r\n        table: {\r\n          id: \"ID\",\r\n          name: \"Name\",\r\n          active: {\r\n            title: \"Status\",\r\n            true: \"Active\",\r\n            false: \"Inactive\",\r\n          },\r\n          payUser: \"Pay User\",\r\n          users: \"Users\",\r\n          quota: \"Quota\",\r\n          actions: \"Action\",\r\n          edit: \"Edit\",\r\n          manageUsers: {\r\n            link: \"Manage users\",\r\n            close: \"Close\",\r\n            closeAndRefresh: \"Close and refresh\",\r\n          },\r\n          delete: {\r\n            link: \"Delete\",\r\n            opName: \"Delete project\",\r\n            confirmPrompt: \"Confirm to delete project {}?\",\r\n            inactive: \"Project is inactive. Please active the project by paying the debt, and then try again.\",\r\n          },\r\n        },\r\n      },\r\n      users: {\r\n        title: \"User Management\",\r\n        refresh: \"Refresh\",\r\n        id: \"ID\",\r\n        username: \"Username\",\r\n        name: \"Name\",\r\n        email: \"Email\",\r\n        active: {\r\n          title: \"Status\",\r\n          true: \"Active\",\r\n          false: \"Inactive\",\r\n        },\r\n        actions: \"Actions\",\r\n        remove: {\r\n          link: \"Remove user\",\r\n          confirmPrompt: \"Confirm to remove user {}?\",\r\n          opName: \"Remove user\",\r\n        },\r\n      },\r\n    },\r\n    resources: {\r\n      notAvailable: {\r\n        title: \"Resources Management Not Available\",\r\n        NotProjectScope: {\r\n          title: \"Resources are not available in domain scope.\",\r\n          subTitle: \"Please switch to a project scope to use resources.\"\r\n        },\r\n        UserNotActive: {\r\n          title: \"Your balance is currently insufficient.\",\r\n          subTitle: \"Please charge.\"\r\n        },\r\n        ScopeNotActive: {\r\n          title: \"Current scope is not available due to insufficient fund.\",\r\n          subTitle: \"Please contact your scope's admin.\"\r\n        },\r\n        toExpenses: \"To Expenses Management\",\r\n      },\r\n      instance: {\r\n        id: \"ID\",\r\n        name: \"Name\",\r\n        ip: \"IP\",\r\n        flavor: \"Flavor\",\r\n        imageName: \"Image Name\",\r\n        status: {\r\n          label: \"Status\",\r\n          SHUTOFF: \"Shutoff\",\r\n          BUILD: \"Building\",\r\n          ERROR: \"Error\",\r\n          ACTIVE: \"Active\",\r\n          REBOOT: \"Soft Reboot\",\r\n          HARD_REBOOT: \"Hard Reboot\",\r\n          STOPPED: \"Stopped\",\r\n        },\r\n        taskState: {\r\n          label: \"Task\",\r\n\r\n        },\r\n        powerState: {\r\n          label: \"Power\",\r\n        },\r\n        vmState: {\r\n          label: \"VM State\",\r\n        },\r\n        createTime: \"Create Time\",\r\n        startTime: \"Total Startup Time\",\r\n        title: \"Instance Management\",\r\n        refresh: \"Refresh\",\r\n        actions: {\r\n          title: \"Actions\",\r\n          start: \"Start Instance\",\r\n          stop: \"Stop Instance\",\r\n          restart: \"Soft Reboot Instance\",\r\n          hardRestart: \"Hard Reboot Instance\",\r\n          delete: \"Delete Instance\",\r\n        },\r\n        add: {\r\n          button: \"Create a Instance\",\r\n          name: \"Name\",\r\n          flavor: \"Flavor\",\r\n          available: \"Available\",\r\n          flavorLimit: \"The flavor must be smaller than or equal to the available limit.\",\r\n          volume: \"Volume Size (GB)\",\r\n          volumeLimit: \"The volume must be smaller than or equal to the available limit.\",\r\n          image: \"Image\",\r\n          opName: \"Create Instance\",\r\n        }\r\n      },\r\n      volume: {\r\n        title: \"Volumes\",\r\n        refresh: \"Refresh\",\r\n        id: \"ID\",\r\n        size: \"Size\",\r\n        createTime: \"Create Time\",\r\n        attachedToInstance: \"Instance Attached to\",\r\n        attachedToDevice: \"Device Attached to\"\r\n      },\r\n      dashboard: {\r\n        title: \"Dashboard\",\r\n        instanceList: {\r\n          title: \"Instances\",\r\n          detail: \"To Details\",\r\n        }\r\n      },\r\n    },\r\n    nav: {\r\n      errorPage: {\r\n        title: \"Not Exists Or Not Authorized\",\r\n        description: \"Sorry, the page you visited does not exist, or you are not authorized to access it.\",\r\n        backToHome: \"Back to resource management\",\r\n      },\r\n      scopeIndicator: {\r\n        projects: \"Projects\",\r\n        domains: \"Domains\",\r\n        social: \"Social\",\r\n        system: \"System\",\r\n        admin: \"Admin\",\r\n        opName: \"Switch\",\r\n        failDescription: \"Please re-login.\",\r\n        changing: \"Switching to {}...\",\r\n        reloading: \"Reloading...\",\r\n        reload: \"Reload\",\r\n      },\r\n      user: {\r\n        selfCenter: \"Manage Account\",\r\n        logout: \"Logout\",\r\n      },\r\n      sidenav: {\r\n        resources: {\r\n          root: \"Resources\",\r\n          dashboard: \"Dashboard\",\r\n          instance: \"Instances\",\r\n          network: \"Network\",\r\n          volume: \"Volumes\",\r\n        },\r\n        expenses: {\r\n          root: \"Expenses\",\r\n          overview: \"Overview\",\r\n          accountTransactions: \"Account Transactions\",\r\n          systemTransactions: \"System Transactions\",\r\n          domainTransactions: \"Domain Transactions\",\r\n          projectTransactions: \"Project Transactions\",\r\n          billings: {\r\n            detail: \"Detail\",\r\n            allocated: \"Allocated\",\r\n            used: \"Used\",\r\n            domains: \"Domains Billings\",\r\n            domain: \"Domain Billing\",\r\n            projects: \"Projects Billings\",\r\n            project: \"Project Billing\",\r\n            users: \"Users Billings\",\r\n            user: \"Project User Billing\",\r\n          },\r\n        },\r\n        identity: {\r\n          root: \"Identity\",\r\n          selfcenter: \"Self Center\",\r\n          account: {\r\n            root: \"Personal Account\",\r\n            basic: \"Basic Information\",\r\n            domains: \"Joined Domains\",\r\n            join: \"Join New Domain\",\r\n          },\r\n          domains: \"Domains\",\r\n          projects: \"Projects\",\r\n          users: \"Users\",\r\n        },\r\n      },\r\n    },\r\n    expenses: {\r\n      root: \"Expenses\",\r\n      overview: {\r\n        root: \"Overview\",\r\n        balance: \"Balance\",\r\n        toAccountTransaction: \"To Account Transactions\",\r\n        charge: {\r\n          button: \"Charge\",\r\n          opName: \"Charge\",\r\n          amount: \"Amount\",\r\n        },\r\n        system: {\r\n          title: \"Latest 5 System Transactions\",\r\n          link: \"To System Transactions\",\r\n        },\r\n        projectAdmin: {\r\n          link: \"To Project Allocated Billing\",\r\n        },\r\n        domainAdmin: {\r\n          link: \"To Domain Allocated Billing\"\r\n        }\r\n      },\r\n      accountTransactions: {\r\n        title: \"Account Transactions\",\r\n        refresh: \"Refresh\",\r\n      },\r\n      systemTransactions: {\r\n        title: \"System Transactions\",\r\n        refresh: \"Refresh\",\r\n      },\r\n      domainTransactions: {\r\n        title: \"Domain Transactions\",\r\n        refresh: \"Refresh\",\r\n      },\r\n      projectTransactions: {\r\n        title: \"Project Transactions\",\r\n        refresh: \"Refresh\",\r\n      },\r\n      billings: {},\r\n    },\r\n    header: {\r\n      resources: \"Resources\",\r\n      expenses: \"Expenses\",\r\n      identity: \"Identity\"\r\n    },\r\n    footer: {\r\n      description: \"Cloud for Academy\",\r\n      contact: {\r\n        title: \"Contact\",\r\n        github: \"GitHub - ddadaal\",\r\n        website: \"Personal Website - ddadaal.me\",\r\n        linkedin: \"LinkedIn - Chen Junda\"\r\n      },\r\n      moreProducts: {\r\n        title: \"More Products\",\r\n        chainpaper: \"ChainPaper - Paper Social Platform powered by Blockchain\",\r\n        chainstore: \"ChainStore - Distributed Storage System based on Blockchain\",\r\n        aplusquant: \"A+Quant - An Asset Allocation System based on ML\",\r\n        tagx00: \"Tag x00 - Online Tagging Platform powered by ML\",\r\n        lightx00: \"Light x00 - Light Product Purchasing-Selling-Stocking System\",\r\n      },\r\n      copyright: {\r\n        madeWithLove: \"Made with ❤\",\r\n      },\r\n    },\r\n  },\r\n};\r\n","export enum TransactionType {\r\n  Charge = \"Charge\",\r\n  UserManagementFee = \"UserManagementFee\",\r\n  DomainManagementFee = \"DomainManagementFee\",\r\n  ProjectManagementFee = \"ProjectManagementFee\",\r\n  DomainQuota = \"DomainQuota\",\r\n  ProjectQuota = \"ProjectQuota\",\r\n  DomainQuotaChange = \"DomainQuotaChange\",\r\n  ProjectQuotaChange = \"ProjectQuotaChange\",\r\n  SocialResourcesChange = \"SocialResourcesChange\",\r\n  UserProjectQuota = \"UserProjectQuota\",\r\n}\r\n\r\nexport interface TransactionReason {\r\n  type: TransactionType;\r\n  info?: string;\r\n}\r\n","import { AuthenticationService, LoginResponse, ScopesResponse, RegisterResponse } from \"./AuthenticationService\";\r\nimport { delay } from \"src/utils/delay\";\r\nimport { makeHttpError, HttpMethod } from '../HttpService';\r\nimport { Scope, UserRole } from \"src/models/Scope\";\r\n\r\nexport class AuthenticationServiceMock extends AuthenticationService {\r\n  async getScopes(username: string): Promise<ScopesResponse> {\r\n    await this.delay();\r\n    if (username === \"system\") {\r\n      return {\r\n        scopes: [{\r\n          system: true,\r\n          domainId: \"system\",\r\n          domainName: \"system\",\r\n          role: UserRole.Admin,\r\n        }]\r\n      };\r\n    }\r\n\r\n    return {\r\n      scopes: [\r\n        { domainId: \"NJUID\", domainName: \"NJU\", role: UserRole.Member },\r\n        { domainId: \"NJUID\", domainName: \"NJU\", projectName: \"67\", projectId: \"67\", role: UserRole.Admin },\r\n        { domainId: \"NJUID\", domainName: \"NJU\", projectName: \"fgh\", projectId: \"fgh\", role: UserRole.Member },\r\n        { domainId: \"PKUID\", domainName: \"PKU\", role: UserRole.Admin },\r\n        { social: true, domainId: \"socialID\", domainName: \"social\", projectName: username, projectId: username, role: UserRole.Admin },\r\n      ],\r\n      lastLoginScope: {\r\n        domainId: \"NJUID\", domainName: \"NJU\", role: UserRole.Member,\r\n      },\r\n      defaultScope: {\r\n        domainId: \"NJUID\", domainName: \"NJU\", role: UserRole.Member,\r\n      }\r\n    }\r\n  }\r\n\r\n  async changeScope(scope: Scope): Promise<LoginResponse> {\r\n    await this.delay();\r\n    return {\r\n      userId: \"123\", token: `testtoken${JSON.stringify(scope)}`,\r\n      userActive: true , scopeActive: true,\r\n    };\r\n  }\r\n\r\n  async login(username: string, password: string, scope: Scope): Promise<LoginResponse> {\r\n    if (username === \"401\") {\r\n      throw makeHttpError(401);\r\n    }\r\n\r\n    return {\r\n      userId: \"123\",\r\n      token: \"testtoken\",\r\n      userActive: true,\r\n      scopeActive: true,\r\n    }\r\n  }\r\n\r\n  async register(username: string, password: string): Promise<RegisterResponse> {\r\n    if (username === \"403\") {\r\n      throw makeHttpError(403);\r\n    }\r\n\r\n    return {\r\n      userId: \"123\",\r\n      token: \"testtoken\",\r\n      scope: { social: true, domainId: \"social\", domainName: \"Social\", projectId: username, projectName: username, role: UserRole.Member }\r\n    }\r\n  }\r\n\r\n}\r\n","import { AccountService, ProfileResponse, GetJoinedDomainsResponse, GetJoinableDomainsResponse, GetScopesResponse } from './AccountService';\r\nimport { makeHttpError } from '../HttpService';\r\nimport { UserRole } from \"src/models/Scope\";\r\n\r\nexport class AccountServiceMock extends AccountService {\r\n\r\n  async getScopes(): Promise<GetScopesResponse> {\r\n    await this.delay();\r\n\r\n    return {\r\n      scopes: [\r\n        { domainId: \"NJUID\", domainName: \"NJU\", role: UserRole.Member },\r\n        { domainId: \"NJUID\", domainName: \"NJU\", projectName: \"67\", projectId: \"67\", role: UserRole.Admin },\r\n        { domainId: \"NJUID\", domainName: \"NJU\", projectName: \"fgh\", projectId: \"fgh\", role: UserRole.Member },\r\n        { domainId: \"PKUID\", domainName: \"PKU\", role: UserRole.Admin },\r\n        { social: true, domainId: \"socialID\", domainName: \"social\", projectName: \"test\", projectId: \"test\", role: UserRole.Admin },\r\n      ],\r\n    }\r\n  }\r\n\r\n\r\n  async getProfile(): Promise<ProfileResponse> {\r\n    await this.delay();\r\n    return {\r\n      profile: {\r\n        id: \"e10fcbe0-443e-440f-ba88-2a3dde2f534a\",\r\n        username: \"test\",\r\n        email: \"ddadaal@outlook.com\",\r\n        name: \"Chen Junda\",\r\n      }\r\n    }\r\n  }\r\n\r\n  async updateProfile(email: string, name: string): Promise<ProfileResponse> {\r\n    await this.delay();\r\n    return {\r\n      profile: {\r\n        id: \"e10fcbe0-443e-440f-ba88-2a3dde2f534a\",\r\n        username: \"test\",\r\n        email: email ?? \"ddadaal@outlook.com\",\r\n        name: name,\r\n      }\r\n    }\r\n  }\r\n\r\n  async updatePassword(password: string): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async getJoinedDomains(): Promise<GetJoinedDomainsResponse> {\r\n    await this.delay();\r\n    return {\r\n      domains: [\r\n        { domainId: \"NJUID\", domainName: \"NJU\", role: UserRole.Member },\r\n        { domainId: \"PKUID\", domainName: \"PKU\", role: UserRole.Admin },\r\n      ]\r\n    }\r\n  }\r\n\r\n  async exitDomain(domainId: string): Promise<void> {\r\n    throw makeHttpError(403, { reason: \"isPayAccount\" });\r\n  }\r\n\r\n  async getJoinableDomains(): Promise<GetJoinableDomainsResponse> {\r\n    await this.delay();\r\n    return {\r\n      domains: [\r\n        { id: \"NJUID\", name: \"NJU\" },\r\n        { id: \"PKUID\", name: \"PKU\" },\r\n      ]\r\n    };\r\n  }\r\n\r\n  async joinDomain(domainId: string): Promise<void> {\r\n    await this.delay();\r\n  }\r\n}\r\n","import { DomainsService, GetDomainsResponse, GetUsersOfDomainResponse } from './DomainsService';\r\nimport { Resources } from \"src/models/Resources\";\r\nimport { User } from \"src/models/User\";\r\nimport { UserRole } from \"src/models/Scope\";\r\n\r\nconst cjd: User = { id: \"CJDID\",  name: \"CJD\" };\r\nconst cjy: User = { id: \"CJYID\",  name: \"CJY\" };\r\n\r\nexport class DomainsServiceMock extends DomainsService {\r\n  async getDomains(): Promise<GetDomainsResponse> {\r\n    await this.delay();\r\n    return {\r\n      domains: [\r\n        {\r\n          id: \"NJUID\",\r\n          name: \"NJUID\",\r\n          active: true,\r\n          payUser: cjd,\r\n          admins: [cjd, cjy],\r\n          quota: { cpu: 4, memory: 64, storage: 5000 },\r\n        },\r\n        {\r\n          id: \"PKUID\",\r\n          name: \"PKU\",\r\n          active: false,\r\n          payUser: cjd,\r\n          admins: [cjd],\r\n          quota: { cpu: 8, memory: 128, storage: 10000 },\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  async getUsersOfDomain(domainId: string): Promise<GetUsersOfDomainResponse> {\r\n    await this.delay();\r\n    return {\r\n      admins: [cjd],\r\n      members: [cjy],\r\n      payUser: cjd,\r\n    }\r\n  }\r\n  async addUserToProject(domainId: string, userId: string, role: UserRole): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async changeUserRole(domainId: string, userId: string, role: UserRole): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async setResources(domainId: string, resources: Resources): Promise<void> {\r\n    await this.delay();\r\n    return undefined;\r\n  }\r\n\r\n  async setAdmins(domainId: string, adminIds: string[]): Promise<void> {\r\n    await this.delay();\r\n    return undefined;\r\n  }\r\n\r\n  async createDomain(name: string, payUserId: string): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async setPayUser(domainId: string, payUserId: string): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async deleteDomain(domainId: string): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  // 400, { code: \"payUser\" | \"onlyAdmin\" }\r\n  async removeUserFromDomain(domainId: string, userId: string): Promise<void> {\r\n    await this.delay();\r\n  }\r\n}\r\n","import { UsersService, GetAccessibleUsersResponse, GetAllUsersResponse } from \"src/apis/identity/UsersService\";\r\nimport { User } from \"src/models/User\";\r\n\r\nconst cjd: User = { id: \"CJDID\",  name: \"CJD\" };\r\nconst cjy: User = { id: \"CJYID\",  name: \"CJY\"};\r\n\r\nexport class UsersServiceMock extends UsersService {\r\n  async getAccessibleUsers(): Promise<GetAccessibleUsersResponse> {\r\n    await this.delay();\r\n    return {\r\n      users: [cjd, cjy]\r\n    };\r\n  }\r\n\r\n  async getAllUsers(): Promise<GetAllUsersResponse> {\r\n    await this.delay();\r\n    return {\r\n      users: [\r\n        {...cjd, active: true },\r\n        { ...cjy, active: false},\r\n      ]\r\n    }\r\n  }\r\n}\r\n","import { ProjectsService, GetAccessibleProjectsResponse, GetUsersOfProjectResponse } from \"src/apis/identity/ProjectsService\";\r\nimport { User } from \"src/models/User\";\r\nimport { UserRole } from \"src/models/Scope\";\r\nimport { Resources } from \"src/models/Resources\";\r\n\r\nconst cjd: User = { id: \"CJDID\",  name: \"CJD\",  };\r\nconst cjy: User = { id: \"CJYID\",  name: \"CJY\" };\r\nconst lq: User = { id: \"lqID\",  name: \"lq\"};\r\nconst fgh: User = { id: \"fghID\",  name: \"fgh\"};\r\n\r\nexport class ProjectsServiceMock extends ProjectsService {\r\n  async getAccessibleProjects(): Promise<GetAccessibleProjectsResponse> {\r\n    await this.delay();\r\n    return {\r\n      projects: [\r\n        {\r\n          id: \"67ID\", name: \"67\", active: true, admins: [lq], payUser: lq, members: [cjd, cjy], quota: { cpu: 4, memory: 8, storage: 512, },\r\n          userQuotas: { \"lqID\": { cpu: 1, memory: 4, storage: 256 }, \"CJDID\": { cpu: 1, memory: 4, storage: 256 }, \"CJYID\": { cpu: 2, memory: 2, storage: 128 } }\r\n        },\r\n        {\r\n          id: \"fghID\", name: \"fgh\", active: false, admins: [fgh], payUser: fgh, members: [cjy], quota: { cpu: 4, memory: 8, storage: 512, },\r\n          userQuotas: { \"fghID\": { cpu: 1, memory: 4, storage: 256 }, \"CJYID\": { cpu: 2, memory: 2, storage: 128 } }\r\n        },\r\n      ]\r\n    }\r\n  }\r\n  async addUserToProject(projectId: string, userId: string, role: UserRole): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async setResourcesOfUser(projectId: string, userId: string, resources: Resources): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async changeUserRole(projectId: string, userId: string, role: UserRole): Promise<void> {\r\n    await this.delay();\r\n    throw { code: \"payUser\" };\r\n  }\r\n\r\n  async removeUserFromProject(projectId: string, userId: string): Promise<void> {\r\n    await this.delay();\r\n    throw { code: \"onlyAdmin\" };\r\n  }\r\n\r\n  async setResources(projectId: string, resources: Resources): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async createProject(name: string, payUserId: string): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async deleteProject(projectId: string): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async getUsersOfProject(projectId: string): Promise<GetUsersOfProjectResponse> {\r\n    await this.delay();\r\n    return {\r\n      admins: [lq],\r\n      members: [cjd, cjy],\r\n      payUser: lq,\r\n\r\n      userQuotas: { \"lqID\": { cpu: 1, memory: 4, storage: 256 }, \"CJDID\": { cpu: 1, memory: 4, storage: 256 }, \"CJYID\": { cpu: 2, memory: 2, storage: 128 } }\r\n    }\r\n  }\r\n  async setPayUser(projectId: string, userId: string): Promise<void> {\r\n    await this.delay();\r\n  }\r\n}\r\n\r\n","import { BalanceService, GetBalanceResponse, ChargeResponse } from './BalanceService';\r\n\r\nexport class BalanceServiceMock extends BalanceService {\r\n  async getBalance(): Promise<GetBalanceResponse> {\r\n    await this.delay();\r\n    return { balance: 500.00 };\r\n  }\r\n\r\n  async charge(amount: number): Promise<ChargeResponse> {\r\n    await this.delay();\r\n    return { balance: 500.00 + amount };\r\n  }\r\n\r\n}\r\n","import { TransactionsResponse, TransactionsService } from \"src/apis/expenses/TransactionsService\";\r\nimport { AccountTransaction } from \"src/models/AccountTransaction\";\r\nimport { OrgTransaction } from \"src/models/OrgTransaction\";\r\nimport { TransactionType } from \"src/models/TransactionReason\";\r\n\r\nexport class TransactionsServiceMock extends TransactionsService {\r\n  async getAccountTransactions(): Promise<TransactionsResponse<AccountTransaction>> {\r\n    await this.delay();\r\n\r\n    return {\r\n      transactions: [\r\n        { id: \"2\", time: \"2020-03-04T06:41:12.836Z\", amount: -10, reason: {type: TransactionType.ProjectManagementFee, info: \"123 (123)\"} },\r\n        { id: \"1\", time: \"2020-03-04T06:40:12.836Z\", amount: 10, reason: {type: TransactionType.Charge }},\r\n      ] as AccountTransaction[]\r\n    };\r\n\r\n  }\r\n\r\n  // limit <= 0 means all data\r\n  async getSystemTransactions(limit = 0): Promise<TransactionsResponse<OrgTransaction>> {\r\n    await this.delay();\r\n    return {\r\n      transactions: [\r\n        { id: \"2\", time: \"2020-03-04T06:41:12.836Z\", amount: -10, reason: {type: TransactionType.ProjectManagementFee, info: \"123 (123)\"}, payerId: \"cjdid\", payerName: \"cjd\", receiverId: \"cjyid\", receiverName: \"cjy\" },\r\n        { id: \"1\", time: \"2020-03-04T06:40:12.836Z\", amount: 10, reason: {type: TransactionType.Charge}, payerId: \"cjdid\", payerName: \"cjd\", receiverId: \"cjyid\", receiverName: \"cjy\" },\r\n      ]\r\n    };\r\n  }\r\n\r\n  async getDomainTransactions(): Promise<TransactionsResponse<OrgTransaction>> {\r\n    return await this.getSystemTransactions();\r\n  }\r\n\r\n  async getProjectTransactions(): Promise<TransactionsResponse<OrgTransaction>> {\r\n    return await this.getSystemTransactions();\r\n  }\r\n}\r\n","import { BillingService, CurrentAllocatedBillingResponse, HistoryAllocatedBillingsResponse, CurrentUsedBillingResponse, HistoryUsedBillingsResponse, BillingResponse } from './BillingService';\r\nimport { BillSubjectType, CurrentAllocatedBilling, CurrentUsedBilling } from \"src/models/Billings\";\r\n\r\nconst dummyResources = { cpu: 4, memory: 128, storage: 256 };\r\nconst dummyDate = \"2020-03-05T03:15:17.484Z\";\r\n\r\nexport class BillingServiceMock extends BillingService {\r\n  async getCurrentAllocatedBillings(): Promise<CurrentAllocatedBillingResponse> {\r\n    await this.delay();\r\n    return {\r\n      billings: [\r\n        { subjectId: \"NJUID\", subjectName: \"NJU\", resources: dummyResources, payerId: \"67id\", payerName: \"67Name\", amount: 120, nextDue: dummyDate },\r\n        { subjectId: \"PKUID\", subjectName: \"PKU\", resources: dummyResources, payerId: \"fcid\", payerName: \"fcName\", amount: 160, nextDue: dummyDate },\r\n      ]\r\n    };\r\n  }\r\n\r\n  async getCurrentAllocatedBilling(subjectType: BillSubjectType, id: string): Promise<BillingResponse<CurrentAllocatedBilling>> {\r\n    await this.delay();\r\n\r\n    return {\r\n      billing:\r\n        { subjectId: \"NJUID\", subjectName: \"NJU\", resources: dummyResources, payerId: \"67id\", payerName: \"67Name\", amount: 120, nextDue: dummyDate },\r\n    }\r\n  }\r\n\r\n  async getCurrentUsedBillings(): Promise<CurrentUsedBillingResponse> {\r\n    await this.delay();\r\n    return {\r\n      billings: [\r\n        { subjectId: \"NJUID\", subjectName: \"NJU\", resources: dummyResources, amount: 120, nextDue: dummyDate },\r\n        { subjectId: \"PKUID\", subjectName: \"PKU\", resources: dummyResources, amount: 160, nextDue: dummyDate },\r\n      ]\r\n    };\r\n  }\r\n\r\n  async getCurrentUsedBilling(subjectType: BillSubjectType, id: string): Promise<BillingResponse<CurrentUsedBilling>> {\r\n    await this.delay();\r\n\r\n    return {\r\n      billing:\r\n        { subjectId: \"NJUID\", subjectName: \"NJU\", resources: dummyResources, amount: 120, nextDue: dummyDate },\r\n    }\r\n  }\r\n  async getHistoryAllocatedBillings(domainId: string): Promise<HistoryAllocatedBillingsResponse> {\r\n    await this.delay();\r\n    return {\r\n      billings: [\r\n        { id: \"1\", resources: dummyResources, payerId: \"67id\", payerName: \"67Name\", amount: 120, startTime: dummyDate, endTime: dummyDate },\r\n        { id: \"2\", resources: dummyResources, payerId: \"fcid\", payerName: \"fcName\", amount: 160, startTime: dummyDate, endTime: dummyDate },\r\n      ]\r\n    };\r\n  }\r\n\r\n  async getHistoryUsedBillings(domainId: string): Promise<HistoryUsedBillingsResponse> {\r\n    await this.delay();\r\n    return {\r\n      billings: [\r\n        { id: \"1\", resources: dummyResources, amount: 120, startTime: dummyDate, endTime: dummyDate },\r\n        { id: \"2\", resources: dummyResources, amount: 160, startTime: dummyDate, endTime: dummyDate },\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { ResourcesService, GetResourcesUsedAndLimitsResponse } from \"./ResourcesService\";\r\n\r\nexport class ResourcesServiceMock extends ResourcesService {\r\n  async getResourcesUsedAndLimits(): Promise<GetResourcesUsedAndLimitsResponse> {\r\n    await this.delay();\r\n\r\n    return {\r\n      allocated: { cpu: 100, memory: 100, storage: 100},\r\n      used: { cpu: 50, memory: 40, storage:60 },\r\n    }\r\n  }\r\n}\r\n","import { InstanceService, GetInstancesResponse } from './InstanceService';\r\nimport { Flavor,  Image } from \"src/models/Instance\";\r\n\r\nconst flavor: Flavor = { name: \"m1.nano\", cpu: 2, memory: 2, rootDisk: 2 };\r\n\r\nexport class InstanceServiceMock extends InstanceService {\r\n  async getInstances(): Promise<GetInstancesResponse> {\r\n    await this.delay();\r\n\r\n    return {\r\n      instances: [\r\n        { id: \"1\", name: \"test\", flavor, status: \"SHUTOFF\", vmState: \"4\", taskState: \"Building\", powerState: \"4\",\r\n          ip: \"10.0.0.162\",\r\n          imageName: \"cirros\", createTime: \"2020-03-16T07:27:56.568Z\", totalStartupHours: 100 }\r\n      ]\r\n    }\r\n  }\r\n\r\n  async getFlavors(): Promise<{ flavors: Flavor[] }> {\r\n    await this.delay();\r\n\r\n    return {\r\n      flavors: [flavor]\r\n    }\r\n  }\r\n\r\n  async getImages(): Promise<{ images: Image[] }> {\r\n    await this.delay();\r\n\r\n    return {\r\n      images: [\r\n        { id: \"!2312312\", name: \"cirros\", minDisk: 2 },\r\n        { id: \"!2312\", name: \"ubuntu\", minDisk: 40 },\r\n      ]\r\n    }\r\n  }\r\n  async createInstance(name: string, flavorId: string, imageId: string, volume: number): Promise<void> {\r\n    await this.delay();\r\n  }\r\n\r\n  async startInstance() {\r\n    await this.delay();\r\n  }\r\n\r\n  async stopInstance() {\r\n    await this.delay();\r\n  }\r\n\r\n  async rebootInstance() {\r\n    await this.delay();\r\n  }\r\n\r\n  async deleteInstance() {\r\n    await this.delay();\r\n  }\r\n}\r\n","import { QuotaService, QuotaStatus } from './QuotaService';\r\n\r\nexport class QuotaServiceMock extends QuotaService {\r\n  async getQuotaStatus(): Promise<QuotaStatus> {\r\n    await this.delay();\r\n\r\n    return {\r\n      used: { cpu: 1, memory: 2, storage: 3 },\r\n      total: { cpu: 2, memory: 4, storage: 6 }\r\n    };\r\n  }\r\n}\r\n","import { VolumeService } from './VolumeService';\r\nimport { Volume } from \"src/models/Volume\";\r\n\r\nexport class VolumeServiceMock extends VolumeService {\r\n  async getVolumes(): Promise<{ volumes: Volume[] }> {\r\n    return {\r\n      volumes: [\r\n        {\r\n          \"id\": \"b937cd1b-1dea-4440-b072-83d0d011d202\",\r\n          \"size\": 1,\r\n          \"createTime\": \"2020-03-17T15:58:58.000000\",\r\n          \"attachedToInstanceId\": \"6bc2a6f8-6cbb-4996-9d20-58c68a27776a\",\r\n          \"attachedToInstanceName\": \"test\",\r\n          \"attachedToDevice\": \"/dev/vda\"\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n","import { HttpService } from \"./HttpService\";\r\nimport { AuthenticationService } from \"./account/AuthenticationService\";\r\nimport { AuthenticationServiceMock } from \"./account/AuthenticationServiceMock\";\r\nimport { ResourcesService } from \"./resources/ResourcesService\";\r\nimport { AccountService } from \"src/apis/identity/AccountService\";\r\nimport { AccountServiceMock } from \"src/apis/identity/AccountServiceMock\";\r\nimport { DomainsService } from \"src/apis/identity/DomainsService\";\r\nimport { DomainsServiceMock } from \"src/apis/identity/DomainsServiceMock\";\r\nimport { UsersService } from \"./identity/UsersService\";\r\nimport { UsersServiceMock } from \"./identity/UsersServiceMock\";\r\nimport { ProjectsService } from \"src/apis/identity/ProjectsService\";\r\nimport { ProjectsServiceMock } from \"src/apis/identity/ProjectsServiceMock\";\r\nimport { BalanceService } from \"src/apis/expenses/BalanceService\";\r\nimport { BalanceServiceMock } from \"src/apis/expenses/BalanceServiceMock\";\r\nimport { TransactionsService } from \"src/apis/expenses/TransactionsService\";\r\nimport { TransactionsServiceMock } from \"src/apis/expenses/TransactionsServiceMock\";\r\nimport { BillingService } from './expenses/BillingService';\r\nimport { BillingServiceMock } from './expenses/BillingServiceMock';\r\nimport { ResourcesServiceMock } from \"./resources/ResourcesServiceMock\";\r\nimport { InstanceServiceMock } from './resources/InstanceServiceMock';\r\nimport { InstanceService } from \"src/apis/resources/InstanceService\";\r\nimport { QuotaService } from './expenses/QuotaService';\r\nimport { QuotaServiceMock } from './expenses/QuotaServiceMock';\r\nimport { VolumeService } from \"src/apis/resources/VolumeService\";\r\nimport { VolumeServiceMock } from \"src/apis/resources/VolumeServiceMock\";\r\n\r\nexport const USE_MOCK = true;\r\n\r\nconst services = [\r\n  [AuthenticationService, AuthenticationServiceMock],\r\n  [ResourcesService, ResourcesServiceMock],\r\n  [InstanceService, InstanceServiceMock],\r\n  [VolumeService, VolumeServiceMock],\r\n  [AccountService, AccountServiceMock],\r\n  [DomainsService, DomainsServiceMock],\r\n  [UsersService, UsersServiceMock],\r\n  [ProjectsService, ProjectsServiceMock],\r\n  [QuotaService, QuotaServiceMock],\r\n  [BalanceService, BalanceServiceMock],\r\n  [TransactionsService, TransactionsServiceMock],\r\n  [BillingService, BillingServiceMock],\r\n] as const;\r\n\r\n\r\nconst serviceConfig = new Map<HttpServiceType, HttpService>();\r\n\r\nservices.forEach((item) => {\r\n  serviceConfig.set(item[0], new item[USE_MOCK ? 1 : 0]());\r\n});\r\n\r\nexport interface HttpServiceType {\r\n  new(...args: unknown[]): HttpService;\r\n}\r\n\r\nexport function getApiService<T extends HttpServiceType>(serviceType: T) {\r\n  // Sure I know what services there are.\r\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n  return serviceConfig.get(serviceType)! as InstanceType<T>;\r\n}\r\n","import { HttpService, HttpMethod } from '../HttpService';\r\nimport { CurrentAllocatedBilling, HistoryAllocatedBilling, BillSubjectType, CurrentUsedBilling, HistoryUsedBilling } from \"src/models/Billings\";\r\n\r\nexport interface BillingsResponse<T> {\r\n  billings: T[];\r\n}\r\n\r\nexport interface BillingResponse<T> {\r\n  billing: T;\r\n}\r\n\r\nexport type CurrentAllocatedBillingResponse = BillingsResponse<CurrentAllocatedBilling>;\r\nexport type CurrentUsedBillingResponse = BillingsResponse<CurrentUsedBilling>;\r\n\r\nexport type HistoryAllocatedBillingsResponse = BillingsResponse<HistoryAllocatedBilling>;\r\nexport type HistoryUsedBillingsResponse = BillingsResponse<HistoryUsedBilling>;\r\n\r\nexport class BillingService extends HttpService {\r\n  async getCurrentAllocatedBillings(subjectType: BillSubjectType): Promise<CurrentAllocatedBillingResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/expenses/billing/allocated/current/${subjectType}`,\r\n    });\r\n\r\n    return resp as CurrentAllocatedBillingResponse;\r\n  }\r\n\r\n  async getCurrentAllocatedBilling(subjectType: BillSubjectType, id: string): Promise<BillingResponse<CurrentAllocatedBilling>> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/expenses/billing/allocated/current/${subjectType}/${id}`\r\n    });\r\n\r\n    return resp as BillingResponse<CurrentAllocatedBilling>;\r\n  }\r\n\r\n  async getCurrentUsedBillings(subjectType: BillSubjectType): Promise<CurrentUsedBillingResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/expenses/billing/used/current/${subjectType}`,\r\n    });\r\n\r\n    return resp as CurrentUsedBillingResponse;\r\n  }\r\n\r\n  async getCurrentUsedBilling(subjectType: BillSubjectType, id: string): Promise<BillingResponse<CurrentUsedBilling>> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/expenses/billing/used/current/${subjectType}/${id}`\r\n    });\r\n\r\n    return resp as BillingResponse<CurrentUsedBilling>;\r\n  }\r\n\r\n  async getHistoryAllocatedBillings(subjectType: BillSubjectType, id: string): Promise<HistoryAllocatedBillingsResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/expenses/billing/allocated/history/${subjectType}/${id}`,\r\n    });\r\n\r\n    return resp as HistoryAllocatedBillingsResponse;\r\n  }\r\n\r\n  async getHistoryUsedBillings(subjectType: BillSubjectType, id: string): Promise<HistoryUsedBillingsResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/expenses/billing/used/history/${subjectType}/${id}`,\r\n    });\r\n\r\n    return resp as HistoryUsedBillingsResponse;\r\n  }\r\n}\r\n","import axios from \"axios\";\r\nimport { delay } from 'src/utils/delay';\r\n\r\nexport interface FetchInfo {\r\n  path?: string;\r\n  method?: HttpMethod;\r\n  params?: { [key: string]: string | number | boolean | undefined };\r\n  body?: unknown;\r\n  headers?: { [s: string]: string };\r\n}\r\n\r\nexport enum HttpMethod {\r\n  GET = \"GET\",\r\n  POST = \"POST\",\r\n  DELETE = \"DELETE\",\r\n  PATCH = \"PATCH\",\r\n  PUT = \"PUT\",\r\n}\r\n\r\nexport interface HttpError<T = any> {\r\n  status: number;\r\n  data?: T;\r\n}\r\n\r\nexport function makeHttpError<T = unknown>(status: number, data?: T): HttpError {\r\n  return { status, data };\r\n}\r\n\r\n\r\nconst BASE_URL = \"https://localhost:8080\";\r\n\r\nconst axiosInstance = axios.create({\r\n  baseURL: BASE_URL,\r\n  headers: { 'Content-Type': \"application/json \" },\r\n});\r\n\r\nexport class HttpService {\r\n\r\n  protected get axios() {\r\n    return axiosInstance;\r\n  }\r\n\r\n  protected async delay(ms = 500) {\r\n    await delay(ms);\r\n  }\r\n\r\n  /**\r\n   * Execute fetch.\r\n   * @param fetchInfo fetch paramters\r\n   * @returns parsed response body if the request is successful\r\n   * @throws A HttpError object if the request is not successful.\r\n   */\r\n  async fetch<T>(fetchInfo: FetchInfo): Promise<T> {\r\n    try {\r\n      const response = await axiosInstance({\r\n        method: fetchInfo.method,\r\n        url: fetchInfo.path,\r\n        params: fetchInfo.params,\r\n        data: fetchInfo.body,\r\n      });\r\n      return response.data;\r\n    } catch (e) {\r\n      if (e.response) {\r\n        // request is complete but the status code is out of 200-300\r\n        // throw it as HttpError\r\n        throw e as HttpError;\r\n      } else if (e.request) {\r\n        // request is sent but no response\r\n        // likely network error\r\n        // throw -1\r\n        throw {\r\n          status: -1,\r\n          data: null,\r\n        };\r\n      } else {\r\n        // some config problem\r\n        // throw -2\r\n        throw {\r\n          status: -2,\r\n          data: null,\r\n        };\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n","import { HttpMethod, HttpService } from \"src/apis/HttpService\";\r\nimport { User, UserForSystem } from \"src/models/User\";\r\n\r\nexport interface GetAccessibleUsersResponse {\r\n  users: User[];\r\n}\r\n\r\nexport interface GetAllUsersResponse {\r\n  users: UserForSystem[];\r\n}\r\n\r\nexport class UsersService extends HttpService {\r\n  async getAccessibleUsers(): Promise<GetAccessibleUsersResponse> {\r\n    const resp = this.fetch<GetAccessibleUsersResponse>({\r\n      method: HttpMethod.GET,\r\n      path: \"/identity/users\",\r\n    });\r\n\r\n    return resp;\r\n  }\r\n\r\n  // 400, { code: \"inactive\" } | { code: \"onlyAdmin\" }\r\n  async removeUserFromSystem(userId: string): Promise<void> {\r\n    const resp = this.fetch({\r\n      method: HttpMethod.DELETE,\r\n      path: `/identity/users/${userId}`,\r\n    });\r\n  }\r\n\r\n  async getAllUsers(): Promise<GetAllUsersResponse> {\r\n    const resp = this.fetch<GetAllUsersResponse>({\r\n      method: HttpMethod.GET,\r\n      path: \"/identity/allUsers\",\r\n    });\r\n\r\n    return resp;\r\n  }\r\n}\r\n","import { HttpService, HttpMethod } from \"../HttpService\";\r\nimport { Domain } from \"src/models/Domain\";\r\nimport { Resources } from 'src/models/Resources';\r\nimport { User } from \"src/models/User\";\r\nimport { UserRole } from \"src/models/Scope\";\r\n\r\nexport interface GetDomainsResponse {\r\n  domains: Domain[];\r\n}\r\n\r\nexport interface GetUsersOfDomainResponse {\r\n  admins: User[];\r\n  members: User[];\r\n  payUser: User;\r\n}\r\n\r\nexport class DomainsService extends HttpService {\r\n  async getDomains(): Promise<GetDomainsResponse> {\r\n    const resp = await this.fetch<GetDomainsResponse>({\r\n      method: HttpMethod.GET,\r\n      path: \"/identity/domains\",\r\n    });\r\n\r\n    return resp;\r\n  }\r\n\r\n  async getUsersOfDomain(domainId: string): Promise<GetUsersOfDomainResponse> {\r\n    const resp = await this.fetch<GetUsersOfDomainResponse>({\r\n      method: HttpMethod.GET,\r\n      path: `/identity/domains/${domainId}/users`,\r\n    });\r\n\r\n    return resp;\r\n  }\r\n\r\n  async addUserToDomain(domainId: string, userId: string, role: UserRole): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.POST,\r\n      path: `/identity/domains/${domainId}/users`,\r\n      body: { userId, role },\r\n    });\r\n  }\r\n\r\n  // error: status code 400, { code: \"payUser\" | \"onlyAdmin\" }\r\n  async changeUserRole(domainId: string, userId: string, role: UserRole): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.PATCH,\r\n      path: `/identity/domains/${domainId}/users/${userId}`,\r\n      body: { role },\r\n    });\r\n  }\r\n\r\n  async setResources(domainId: string, resources: Resources): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.PATCH,\r\n      path: `/identity/domains/${domainId}/resources`,\r\n      body: { resources },\r\n    });\r\n  }\r\n\r\n  async setAdmins(domainId: string, adminIds: string[]): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.PATCH,\r\n      path: `/identity/domains/${domainId}/admins`,\r\n      body: { ids: adminIds },\r\n    });\r\n  }\r\n\r\n  async setPayUser(domainId: string, payUserId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.PATCH,\r\n      path: `/identity/domains/${domainId}/payUser`,\r\n      body: { payUserId },\r\n    });\r\n  }\r\n\r\n  async createDomain(name: string, payUserId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.POST,\r\n      path: `/identity/domains`,\r\n      body: { name, payUserId },\r\n    });\r\n\r\n  }\r\n\r\n  // 400, { code:  }\r\n  async deleteDomain(domainId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.DELETE,\r\n      path: `/identity/domains/${domainId}`,\r\n    });\r\n  }\r\n\r\n  // 400, { code: \"payUser\" | \"onlyAdmin\" }\r\n  async removeUserFromDomain(domainId: string, userId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.DELETE,\r\n      path: `/identity/domains/${domainId}/users/${userId}`,\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","import { HttpService, HttpMethod } from \"../HttpService\";\r\nimport { Project } from \"src/models/Project\";\r\nimport { UserRole } from \"src/models/Scope\";\r\nimport { Resources } from 'src/models/Resources';\r\nimport { User } from \"src/models/User\";\r\n\r\nexport interface GetAccessibleProjectsResponse {\r\n  projects: Project[];\r\n}\r\n\r\nexport interface GetUsersOfProjectResponse {\r\n  admins: User[];\r\n  members: User[];\r\n  payUser: User;\r\n  userQuotas: { [userId: string]: Resources };\r\n}\r\n\r\nexport class ProjectsService extends HttpService {\r\n  async getAccessibleProjects(): Promise<GetAccessibleProjectsResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: \"/identity/projects\"\r\n    });\r\n\r\n    return resp as GetAccessibleProjectsResponse;\r\n  }\r\n\r\n  async getUsersOfProject(projectId: string): Promise<GetUsersOfProjectResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/identity/projects/${projectId}/users`,\r\n    });\r\n\r\n    return resp as GetUsersOfProjectResponse;\r\n  }\r\n\r\n  async setResourcesOfUser(projectId: string, userId: string, resources: Resources): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.PATCH,\r\n      path: `/identity/projects/${projectId}/users/${userId}/resources`,\r\n      body: { resources },\r\n    });\r\n  }\r\n\r\n  async addUserToProject(projectId: string, userId: string, role: UserRole): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.POST,\r\n      path: `/identity/projects/${projectId}/users`,\r\n      body: { userId, role },\r\n    });\r\n  }\r\n\r\n  // error: status code 400, { code: \"payUser\" | \"onlyAdmin\" }\r\n  async changeUserRole(projectId: string, userId: string, role: UserRole): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.PATCH,\r\n      path: `/identity/projects/${projectId}/users/${userId}/role`,\r\n      body: { role },\r\n    });\r\n  }\r\n\r\n  // error: status code 400, { code: \"payUser\" | \"onlyAdmin\" }\r\n  async removeUserFromProject(projectId: string, userId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.DELETE,\r\n      path: `/identity/projects/${projectId}/users/${userId}`,\r\n    });\r\n  }\r\n\r\n  async setResources(projectId: string, resources: Resources): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.PATCH,\r\n      path: `/identity/projects/${projectId}/resources`,\r\n      body: { resources }\r\n    });\r\n  }\r\n\r\n  async createProject(name: string, payUserId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.POST,\r\n      path: `/identity/projects/`,\r\n      body: { name, payUserId }\r\n    });\r\n  }\r\n\r\n  // 400, { code:  }\r\n  async deleteProject(projectId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.DELETE,\r\n      path: `/identity/projects/${projectId}`,\r\n    });\r\n  }\r\n\r\n  async setPayUser(projectId: string, userId: string): Promise<void> {\r\n    await this.fetch({\r\n      method: HttpMethod.PATCH,\r\n      path: `/identity/projects/${projectId}/payUser`,\r\n      body: { userId },\r\n    })\r\n  }\r\n\r\n}\r\n","import { HttpService, HttpMethod } from \"src/apis/HttpService\";\r\nimport { AccountTransaction } from \"src/models/AccountTransaction\";\r\nimport { OrgTransaction } from 'src/models/OrgTransaction';\r\n\r\nexport interface TransactionsResponse<T> {\r\n  transactions: T[];\r\n}\r\n\r\n\r\n// limit <= 0 means all data\r\n// all returns ordered (descend) transactions by date\r\nexport class TransactionsService extends HttpService {\r\n  async getAccountTransactions(limit = 0): Promise<TransactionsResponse<AccountTransaction>> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: \"/expenses/transactions/account\",\r\n      params: { limit },\r\n    });\r\n\r\n    return resp as TransactionsResponse<AccountTransaction>;\r\n\r\n  }\r\n\r\n  async getSystemTransactions(limit = 0): Promise<TransactionsResponse<OrgTransaction>> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: \"/expenses/transactions/system\",\r\n      params: { limit }\r\n    });\r\n\r\n    return resp as TransactionsResponse<OrgTransaction>;\r\n  }\r\n\r\n  async getDomainTransactions(domainId: string, limit = 0): Promise<TransactionsResponse<OrgTransaction>> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/expenses/transactions/domain/${domainId}`,\r\n      params: { limit }\r\n    });\r\n\r\n    return resp as TransactionsResponse<OrgTransaction>;\r\n  }\r\n\r\n  async getProjectTransactions(projectId: string, limit = 0): Promise<TransactionsResponse<OrgTransaction>> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/expenses/transactions/project/${projectId}`,\r\n      params: { limit }\r\n    });\r\n\r\n    return resp as TransactionsResponse<OrgTransaction>;\r\n  }\r\n}\r\n","import { HttpService, HttpMethod } from '../HttpService';\r\nimport { Instance, Flavor, Image } from \"src/models/Instance\";\r\n\r\nexport interface GetInstancesResponse {\r\n  instances: Instance[];\r\n}\r\n\r\nexport class InstanceService extends HttpService {\r\n  async getInstances(): Promise<GetInstancesResponse> {\r\n    return this.fetch<GetInstancesResponse>({\r\n      method: HttpMethod.GET,\r\n      path: \"/resources/instances\",\r\n    });\r\n  }\r\n  async getFlavors(): Promise<{ flavors: Flavor[] }> {\r\n    return await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: \"/resources/flavors\",\r\n    });\r\n  }\r\n\r\n  async getImages(): Promise<{ images: Image[] }> {\r\n    return await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: \"/resources/images\",\r\n    });\r\n  }\r\n\r\n  async createInstance(name: string, flavorName: string, imageName: string, volume: number): Promise<void> {\r\n    return await this.fetch({\r\n      method: HttpMethod.POST,\r\n      path: \"/resources/instances\",\r\n      body: { name, flavorName, imageName, volume },\r\n    });\r\n  }\r\n\r\n  async startInstance(instanceId: string) {\r\n    await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/resources/instances/${instanceId}/start`\r\n    });\r\n  }\r\n\r\n  async rebootInstance(instanceId: string, hard: boolean) {\r\n    await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/resources/instances/${instanceId}/reboot`,\r\n      params: { hard }\r\n    });\r\n  }\r\n\r\n  async stopInstance(instanceId: string) {\r\n    await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/resources/instances/${instanceId}/stop`\r\n    });\r\n  }\r\n\r\n  async deleteInstance(instanceId: string) {\r\n    await this.fetch({\r\n      method: HttpMethod.DELETE,\r\n      path: `/resources/instances/${instanceId}`,\r\n    });\r\n  }\r\n}\r\n","import { Resources } from 'src/models/Resources';\r\nimport { HttpService, HttpMethod } from '../HttpService';\r\nimport { BillSubjectType } from 'src/models/Billings';\r\n\r\nexport interface QuotaStatus {\r\n  used: Resources;\r\n  total: Resources;\r\n}\r\n\r\nexport class QuotaService extends HttpService {\r\n  async getQuotaStatus(type: BillSubjectType, id: string): Promise<QuotaStatus> {\r\n    return await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: `/expenses/quotaStatus/${type}/${id}`,\r\n    });\r\n  }\r\n\r\n}\r\n","import { HttpService, HttpMethod } from \"../HttpService\";\r\nimport { Resources } from \"src/models/Resources\";\r\n\r\nexport interface GetResourcesUsedAndLimitsResponse {\r\n  used: Resources;\r\n  allocated: Resources;\r\n}\r\n\r\nexport class ResourcesService extends HttpService {\r\n\r\n  async getResourcesUsedAndLimits(): Promise<GetResourcesUsedAndLimitsResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: \"/resources/limits\",\r\n    });\r\n\r\n    return resp as GetResourcesUsedAndLimitsResponse;\r\n  }\r\n\r\n}\r\n","import { HttpService, HttpMethod } from \"../HttpService\";\r\n\r\nexport interface GetBalanceResponse {\r\n  balance: number;\r\n}\r\n\r\nexport interface ChargeResponse {\r\n  balance: number;\r\n}\r\n\r\nexport class BalanceService extends HttpService {\r\n  async getBalance(): Promise<GetBalanceResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: \"/expenses/balance\",\r\n    });\r\n\r\n    return resp as GetBalanceResponse;\r\n  }\r\n\r\n  async charge(amount: number): Promise<ChargeResponse> {\r\n    const resp = await this.fetch({\r\n      method: HttpMethod.POST,\r\n      path: \"/expenses/balance\",\r\n      body: { amount }\r\n    });\r\n\r\n    return resp as ChargeResponse;\r\n  }\r\n\r\n}\r\n","import { HttpService, HttpMethod } from '../HttpService';\r\nimport { Volume } from \"src/models/Volume\";\r\n\r\nexport class VolumeService extends HttpService {\r\n  async getVolumes(): Promise<{ volumes: Volume[] }> {\r\n    return await this.fetch({\r\n      method: HttpMethod.GET,\r\n      path: \"/resources/volumes\",\r\n    });\r\n  }\r\n}\r\n","import { baselineLanguage, Definitions } from \"./definition\";\r\n\r\nconst lang = {};\r\n\r\nfunction makeLangObj(obj: {}, baselineLangSection: {}, baseKey: string) {\r\n  for (const key in baselineLangSection) {\r\n    const newKey = baseKey + key;\r\n    switch (typeof baselineLangSection[key]) {\r\n      case \"string\":\r\n        obj[key] = newKey;\r\n        break;\r\n      case \"object\":\r\n        obj[key] = {};\r\n        makeLangObj(obj[key], baselineLangSection[key], newKey + \".\");\r\n        break;\r\n      default:\r\n        throw `Unexpected value in ${newKey}. string/object only`;\r\n    }\r\n  }\r\n}\r\n\r\nmakeLangObj(lang, baselineLanguage.definitions, \"\");\r\n\r\nexport default lang as Definitions;\r\n","import { getLanguage } from \"src/i18n/definition\";\r\nimport { useState, useCallback } from \"react\";\r\n\r\n\r\nfunction getInitialLanguage(): string {\r\n  return navigator.language;\r\n}\r\n\r\nconst splitter = /(\\{\\})/;\r\n\r\nfunction replacePlaceholders(definition: string, replacements: React.ReactNode[]): React.ReactNode | string {\r\n  const array = definition.split(splitter) as React.ReactNode[];\r\n  let ri = 0;\r\n\r\n  let containsNonPrimitive = false;\r\n\r\n  for (let i = 1; i < array.length; i += 2) {\r\n    if (typeof replacements[ri] === \"object\") {\r\n      containsNonPrimitive = true;\r\n    }\r\n    array[i] = replacements[ri++];\r\n  }\r\n\r\n  if (!containsNonPrimitive) {\r\n    return array.join(\"\");\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport default function I18nStore() {\r\n  const [currentLanguage, setLanguage] = useState(getLanguage(getInitialLanguage()));\r\n\r\n  const changeLanguage = useCallback((langString: string) => setLanguage(getLanguage(langString)), []);\r\n\r\n  const getDefinition = useCallback((id: string): string => {\r\n    let content = currentLanguage.definitions;\r\n    for (const key of id.split(\".\")) {\r\n      if (typeof content === \"undefined\") {\r\n        throw new RangeError(`unidentified id ${id}`);\r\n      }\r\n      content = content[key];\r\n    }\r\n    if (typeof content !== \"string\") {\r\n      throw new RangeError(`id ${id} does not refer to a string. actual value: ${content}`);\r\n    }\r\n    return content;\r\n  }, [currentLanguage]);\r\n\r\n  const translate = useCallback((id: string, replacements?: React.ReactNode[]): React.ReactNode | string => {\r\n\r\n    const def = getDefinition(id);\r\n    if (!replacements || replacements.length === 0) {\r\n      return def;\r\n    }\r\n    return replacePlaceholders(def, replacements);\r\n  }, [getDefinition]);\r\n\r\n  return { currentLanguage, changeLanguage, setLanguage, translate };\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport { useStore } from \"simstate\";\r\nimport I18nStore from \"./I18nStore\";\r\n\r\nexport function useLocalized(id: string, replacements?: React.ReactNode[]) {\r\n  const i18nStore = useStore(I18nStore);\r\n\r\n  return i18nStore.translate(id, replacements);\r\n}\r\n\r\nexport function useMultiLocalized(...values: (string | [string, React.ReactNode[] | undefined])[]): React.ReactNode[] {\r\n  const i18nStore = useStore(I18nStore);\r\n\r\n  return values.map((value) =>\r\n    typeof value === \"string\"\r\n      ? i18nStore.translate(value)\r\n      : i18nStore.translate(value[0], value[1]));\r\n\r\n}\r\n\r\n","import React, { useMemo } from \"react\";\r\nimport I18nStore from \"./I18nStore\";\r\n\r\nimport { useStore } from \"simstate\";\r\n\r\ninterface Props {\r\n  id: string;\r\n  replacements?: (string | React.ReactNode)[];\r\n}\r\n\r\nconst Localized: React.FC<Props> = ({ id, replacements }) => {\r\n\r\n  const i18nStore = useStore(I18nStore);\r\n\r\n  return useMemo(\r\n    () => i18nStore.translate(id, replacements) as unknown as React.ReactElement,\r\n    [i18nStore.currentLanguage, id, ...replacements || []]);\r\n\r\n};\r\n\r\nexport default Localized;\r\n","import React from \"react\";\r\nimport { Localized } from \".\";\r\n\r\nexport type RecursiveLocalizedId = string | [string, RecursiveLocalizedId[]];\r\n\r\ninterface Props {\r\n  id: RecursiveLocalizedId;\r\n}\r\n\r\nexport const RecursiveLocalized: React.FC<Props> = ({ id }) => {\r\n  if (typeof id === \"string\") {\r\n    return <Localized id={id} />;\r\n  } else {\r\n    return (\r\n      <Localized\r\n        id={id[0]}\r\n        replacements={id[1].map((x, i) => <RecursiveLocalized key={i} id={x} />)}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { useState, useCallback, useEffect } from \"react\";\r\nimport { Scope } from \"src/models/Scope\";\r\nimport { getApiService } from \"src/apis\";\r\nimport { AuthenticationService } from \"src/apis/account/AuthenticationService\";\r\n\r\nconst STORAGE_KEY = \"User\";\r\n\r\n\r\ninterface User {\r\n  userId: string;\r\n  username: string;\r\n  scope: Scope;\r\n  userActive: boolean;\r\n  scopeActive: boolean;\r\n  token: string;\r\n  remember: boolean;\r\n}\r\n\r\nconst authenticationService = getApiService(AuthenticationService);\r\n\r\nexport function getUserInfoInStorage(): User | null {\r\n  const data = localStorage.getItem(STORAGE_KEY);\r\n  if (data) {\r\n    const user =  JSON.parse(data) as User;\r\n    authenticationService.setToken(user.token);\r\n    return user;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nfunction saveUserInfo(user: User) {\r\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(user));\r\n}\r\n\r\nexport function UserStore() {\r\n  const [user, setUser] = useState(getUserInfoInStorage);\r\n\r\n  const loggedIn = !!user;\r\n\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem(STORAGE_KEY);\r\n    setUser(null);\r\n  }, []);\r\n\r\n  const login = useCallback((user: User) => {\r\n    setUser(user);\r\n    if (user.remember) {\r\n      saveUserInfo(user);\r\n    }\r\n  }, []);\r\n\r\n  const updateAvailability = useCallback(async () => {\r\n    // just relogin\r\n    if (user) {\r\n      const resp = await authenticationService.changeScope(user.scope);\r\n      // if availability is changed, relogin.\r\n      if (user.scopeActive !== resp.scopeActive || user.userActive !== resp.userActive) {\r\n        login({ ...user, ...resp });\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    updateAvailability();\r\n  }, [updateAvailability]);\r\n\r\n  return { loggedIn, user, logout, login, updateAvailability };\r\n}\r\n","import lang from \"src/i18n/lang\";\n\nexport interface NavPoint {\n  path: string | RegExp; // 匹配的path，是string的时候用startsWith判断，是RegExp的时候用match判断\n  jumpTo?: (pathname: string) => string; // 传给Link的path，支持..返回上一级\n  textId: string; //\n}\n\nconst root = lang.nav.sidenav;\n\nfunction getBillingSubject(pathname: string) {\n  const splitted = pathname.split(\"/\").filter((x) => !!x);\n  return splitted[4];\n}\n\nexport const availableNavPoints = [\n  { path: \"/resources\", textId: root.resources.root },\n  { path: \"/resources/dashboard\", textId: root.resources.dashboard },\n  { path: \"/resources/instances\", textId: root.resources.instance },\n  { path: \"/resources/network\", textId: root.resources.network },\n  { path: \"/resources/volumes\", textId: root.resources.volume },\n  { path: \"/expenses\", textId: root.expenses.root },\n  { path: \"/expenses/overview\", textId: root.expenses.overview },\n  { path: \"/expenses/transactions/account\", textId: root.expenses.accountTransactions },\n  { path: \"/expenses/transactions/system\", textId: root.expenses.systemTransactions },\n  { path: \"/expenses/transactions/domain\", textId: root.expenses.domainTransactions },\n  { path: \"/expenses/transactions/project\", textId: root.expenses.projectTransactions },\n  { path: \"/expenses/billings/domains\", textId: root.expenses.billings.domains },\n  { path: \"/expenses/billings/domains/allocated\", textId: root.expenses.billings.allocated },\n  {\n    path: /\\/expenses\\/billings\\/domains\\/allocated\\/[0-9a-zA-Z]*/,\n    textId: root.expenses.billings.detail,\n    jumpTo: (pathname: string) => `/expenses/billings/domains/allocated/${getBillingSubject(pathname)}`,\n  },\n  { path: \"/expenses/billings/domains/used\", textId: root.expenses.billings.allocated },\n  { path: \"/expenses/billings/domain\", textId: root.expenses.billings.domain },\n  { path: \"/expenses/billings/domain/allocated\", textId: root.expenses.billings.allocated },\n  { path: \"/expenses/billings/domain/used\", textId: root.expenses.billings.used },\n  { path: \"/expenses/billings/projects\", textId: root.expenses.billings.projects },\n  { path: \"/expenses/billings/projects/allocated\", textId: root.expenses.billings.allocated },\n  { path: \"/expenses/billings/projects/used\", textId: root.expenses.billings.used },\n  { path: \"/expenses/billings/project\", textId: root.expenses.billings.project },\n  { path: \"/expenses/billings/project/allocated\", textId: root.expenses.billings.allocated },\n  { path: \"/expenses/billings/project/used\", textId: root.expenses.billings.used },\n  { path: \"/expenses/billings/users\", textId: root.expenses.billings.users },\n  { path: \"/expenses/billings/users/allocated\", textId: root.expenses.billings.allocated },\n  { path: \"/expenses/billings/users/used\", textId: root.expenses.billings.used },\n  { path: \"/expenses/billings/user\", textId: root.expenses.billings.user },\n  { path: \"/expenses/billings/user/allocated\", textId: root.expenses.billings.allocated },\n  { path: \"/expenses/billings/user/used\", textId: root.expenses.billings.used },\n  { path: \"/identity\", textId: root.identity.root },\n  { path: \"/identity/account\", textId: root.identity.account.root },\n  { path: \"/identity/account/basic\", textId: root.identity.account.basic },\n  { path: \"/identity/account/joinedDomains\", textId: root.identity.account.domains },\n  { path: \"/identity/projects\", textId: root.identity.projects },\n  { path: \"/identity/domains\", textId: root.identity.domains },\n  { path: \"/identity/users\", textId: root.identity.users },\n] as NavPoint[];\n","import { availableNavPoints, NavPoint } from \"./NavPoints\";\nimport { useState, useMemo } from \"react\";\nimport { useLocation } from \"src/utils/useLocation\";\nimport { NavItemProps } from \"./NavItemProps\";\n\ninterface SideNav {\n  navs: NavItemProps[];\n}\n\nexport function NavStore() {\n  const location = useLocation();\n\n  const [sidenavs, setSidenavs] = useState<NavItemProps[]>([]);\n\n  const hasSider = useMemo(() => sidenavs.length !== 0, [sidenavs]);\n\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  const currentNavPath = useMemo(() => {\n    const path = location.pathname;\n    const points = availableNavPoints.map((x) => {\n      if (typeof x.path === \"string\") {\n        return path.startsWith(x.path) ? x : null;\n      } else {\n        const match = path.match(x.path);\n        if (match) {\n          return { ...x, path: x.jumpTo?.(path) ?? x.path };\n        } else {\n          return null;\n        }\n      }\n    }).filter((x) => !!x) as NavPoint[];\n\n    // remove the shorter one if two have the same depth\n    const filteredOut = [] as NavPoint[];\n    const depth = (path: string) => path.split(\"/\").length;\n    for (let i = 0; i < points.length; i++) {\n      for (let j = i + 1; j < points.length; j++) {\n        const path1 = points[i].path as string;\n        const path2 = points[j].path as string;\n        if (depth(path1) === depth(path2)) {\n          if (path1.length < path2.length) {\n            filteredOut.push(points[i]);\n          } else {\n            filteredOut.push(points[j]);\n          }\n        }\n      }\n    }\n\n    return points.filter(x => !filteredOut.includes(x));\n  }, [location]);\n\n  return { currentNavPath, sidebarCollapsed, setSidebarCollapsed, sidenavs, setSidenavs, location, hasSider };\n\n}\n\n\n","import { Scope, scopeEquals } from \"src/models/Scope\";\r\nimport { useState, useCallback, useEffect } from \"react\";\r\nimport { getApiService } from \"src/apis\";\r\nimport { AccountService } from \"src/apis/identity/AccountService\";\r\nimport { useStore } from \"simstate\";\r\nimport { UserStore } from \"./UserStore\";\r\n\r\nconst AVAILABLE_SCOPES_KEY = \"available_scopes\";\r\n\r\nfunction read(): Scope[] {\r\n  const data = localStorage.getItem(AVAILABLE_SCOPES_KEY);\r\n\r\n  if (data) {\r\n    return JSON.parse(data);\r\n  } else {\r\n    return [];\r\n  }\r\n}\r\n\r\nfunction save(scopes: Scope[]) {\r\n  localStorage.setItem(AVAILABLE_SCOPES_KEY, JSON.stringify(scopes));\r\n}\r\n\r\nconst service = getApiService(AccountService);\r\n\r\nexport function AvailableScopesStore() {\r\n  const [scopes, setScopes] = useState<Scope[]>(read);\r\n  const [reloading, setReloading] = useState(false);\r\n\r\n  const set = useCallback((scopes: Scope[], remember: boolean)=> {\r\n    setScopes(scopes);\r\n    if (remember) { save(scopes);}\r\n  }, []);\r\n\r\n  const updateScopes = useCallback(async () => {\r\n    try {\r\n      setReloading(true);\r\n      const { scopes } = await service.getScopes();\r\n      setScopes(scopes);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setReloading(false)\r\n    }\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    localStorage.removeItem(AVAILABLE_SCOPES_KEY);\r\n    setScopes([]);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    updateScopes();\r\n  }, []);\r\n\r\n  return { scopes, setScopes: set, updateScopes, reloading, logout };\r\n\r\n}\r\n","export enum UserRole {\r\n  Admin = \"Admin\",\r\n  Member = \"Member\",\r\n}\r\n\r\n\r\nexport interface Scope {\r\n  system?: boolean;\r\n  social?: boolean;\r\n  domainId: string;\r\n  domainName: string;\r\n  projectId?: string;\r\n  projectName?: string;\r\n  userProjectAssignmentId?: string;\r\n  role: UserRole;\r\n}\r\n\r\n\r\nexport function scopeId(scope: Scope): string {\r\n  return `${scope.domainId}+${scope.projectId ?? \"\"}`;\r\n}\r\n\r\nexport function scopeEquals(scope1: Scope, scope2: Scope): boolean {\r\n  return scopeId(scope1) == scopeId(scope2);\r\n}\r\n\r\nexport function scopeName(scope: Scope): string {\r\n  if (scope.projectName) {\r\n    return `${scope.domainName} - ${scope.projectName}`;\r\n  } else {\r\n    return scope.domainName;\r\n  }\r\n}\r\n\r\nexport function isSystemScope(scope: Scope): boolean {\r\n  return !!scope.system;\r\n}\r\nexport function isSocialScope(scope: Scope): boolean {\r\n  return !!scope.social;\r\n}\r\n\r\nexport function isDomainScope(scope: Scope): boolean {\r\n  return !isSystemScope(scope) && !scope.projectId;\r\n}\r\n\r\nexport function isAdmin(scope: Scope): boolean {\r\n  return scope.role === UserRole.Admin;\r\n\r\n}\r\nexport function isDomainAdmin(scope: Scope): boolean {\r\n  return isDomainScope(scope) && isAdmin(scope);\r\n}\r\n\r\nexport function isProjectScope(scope: Scope): boolean {\r\n  return !!scope.projectId;\r\n}\r\n\r\nexport function isProjectAdmin(scope: Scope): boolean {\r\n  return isProjectScope(scope) && isAdmin(scope);\r\n}\r\n\r\nexport const isResourcesDisabled = (scope?: Scope) => !scope || isSystemScope(scope) || isDomainScope(scope);\r\n","export function delay(ms: number): Promise<void> {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, ms);\r\n  })\r\n}\r\n","import React from \"react\";\nimport { Spin } from \"antd\";\n\nexport default function PageLoading() {\n  return (\n    <Spin spinning={true}>\n    </Spin>\n  );\n}\n","import { useState, useEffect } from 'react';\r\nimport { globalHistory } from '@reach/router';\r\n\r\nexport const useLocation = () => {\r\n  const initialState = globalHistory.location;\r\n\r\n  const [state, setState] = useState(initialState);\r\n  useEffect(() => {\r\n    const removeListener = globalHistory.listen(params => {\r\n      const { location } = params;\r\n      setState(location);\r\n    });\r\n    return () => {\r\n      removeListener();\r\n    };\r\n  }, []);\r\n\r\n  return state;\r\n};\r\n\r\n"],"sourceRoot":""}